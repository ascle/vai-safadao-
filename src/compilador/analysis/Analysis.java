/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.analysis;

import compilador.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAAlogicoPbinaryExpr(AAlogicoPbinaryExpr node);
    void caseAArelacionalPbinaryExpr(AArelacionalPbinaryExpr node);
    void caseADfsdPbinaryExpr(ADfsdPbinaryExpr node);
    void caseAPbinaryLogicoExp(APbinaryLogicoExp node);
    void caseADsPbinaryLogicoExp(ADsPbinaryLogicoExp node);
    void caseAPbinaryLogicoFactor(APbinaryLogicoFactor node);
    void caseADsPbinaryLogicoFactor(ADsPbinaryLogicoFactor node);
    void caseAPbinaryLogicoFactorNot(APbinaryLogicoFactorNot node);
    void caseAOperandoPbinaryLogicoFactorNot(AOperandoPbinaryLogicoFactorNot node);
    void caseAPbinaryRelExp(APbinaryRelExp node);
    void caseAOperandoPbinaryRelExp(AOperandoPbinaryRelExp node);
    void caseATigualIgualPrelOp(ATigualIgualPrelOp node);
    void caseATmenorPrelOp(ATmenorPrelOp node);
    void caseATmaiorPrelOp(ATmaiorPrelOp node);

    void caseTTnumero(TTnumero node);
    void caseTTnumerooctal(TTnumerooctal node);
    void caseTTnumerohexa(TTnumerohexa node);
    void caseTTcommentLine(TTcommentLine node);
    void caseTTcomentBloco(TTcomentBloco node);
    void caseTTnomePrograma(TTnomePrograma node);
    void caseTTstring(TTstring node);
    void caseTTespaco(TTespaco node);
    void caseTTquebra(TTquebra node);
    void caseTTidentacao(TTidentacao node);
    void caseTTadicao(TTadicao node);
    void caseTTsubtracao(TTsubtracao node);
    void caseTTbarra(TTbarra node);
    void caseTTestrela(TTestrela node);
    void caseTTmenor(TTmenor node);
    void caseTTmenorIgual(TTmenorIgual node);
    void caseTTmaior(TTmaior node);
    void caseTTmaiorIgual(TTmaiorIgual node);
    void caseTTseta(TTseta node);
    void caseTTigualIgual(TTigualIgual node);
    void caseTTdiferente(TTdiferente node);
    void caseTTigual(TTigual node);
    void caseTTpontoEVirgula(TTpontoEVirgula node);
    void caseTTdelimitador(TTdelimitador node);
    void caseTTvirgula(TTvirgula node);
    void caseTTabreParen(TTabreParen node);
    void caseTTfechaParen(TTfechaParen node);
    void caseTTabreColchete(TTabreColchete node);
    void caseTTfechaColchete(TTfechaColchete node);
    void caseTTabreChave(TTabreChave node);
    void caseTTfechaChave(TTfechaChave node);
    void caseTTabreComent(TTabreComent node);
    void caseTTfechaComent(TTfechaComent node);
    void caseTTponto(TTponto node);
    void caseTTdoispontos(TTdoispontos node);
    void caseTTandLogico(TTandLogico node);
    void caseTTorLogico(TTorLogico node);
    void caseTTnotLogico(TTnotLogico node);
    void caseTTdeclaracaoAtribuicao(TTdeclaracaoAtribuicao node);
    void caseTTellipsis(TTellipsis node);
    void caseTTdefault(TTdefault node);
    void caseTTcase(TTcase node);
    void caseTTif(TTif node);
    void caseTTelse(TTelse node);
    void caseTTfunc(TTfunc node);
    void caseTTdefer(TTdefer node);
    void caseTTreturn(TTreturn node);
    void caseTTrange(TTrange node);
    void caseTTfor(TTfor node);
    void caseTTvar(TTvar node);
    void caseTTconst(TTconst node);
    void caseTTbool(TTbool node);
    void caseTTint32(TTint32 node);
    void caseTTint64(TTint64 node);
    void caseTTtipo(TTtipo node);
    void caseTTidentifier(TTidentifier node);
    void caseTTcharIgnored(TTcharIgnored node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
