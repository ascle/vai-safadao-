/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.node;

import compilador.analysis.*;

@SuppressWarnings("nls")
public final class APbinaryAritFactor extends PPbinaryAritFactor
{
    private PPbinaryAritFactor _pbinaryAritFactor_;
    private PPmulOp _pmulOp_;
    private PPbinaryAritTermo _pbinaryAritTermo_;

    public APbinaryAritFactor()
    {
        // Constructor
    }

    public APbinaryAritFactor(
        @SuppressWarnings("hiding") PPbinaryAritFactor _pbinaryAritFactor_,
        @SuppressWarnings("hiding") PPmulOp _pmulOp_,
        @SuppressWarnings("hiding") PPbinaryAritTermo _pbinaryAritTermo_)
    {
        // Constructor
        setPbinaryAritFactor(_pbinaryAritFactor_);

        setPmulOp(_pmulOp_);

        setPbinaryAritTermo(_pbinaryAritTermo_);

    }

    @Override
    public Object clone()
    {
        return new APbinaryAritFactor(
            cloneNode(this._pbinaryAritFactor_),
            cloneNode(this._pmulOp_),
            cloneNode(this._pbinaryAritTermo_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPbinaryAritFactor(this);
    }

    public PPbinaryAritFactor getPbinaryAritFactor()
    {
        return this._pbinaryAritFactor_;
    }

    public void setPbinaryAritFactor(PPbinaryAritFactor node)
    {
        if(this._pbinaryAritFactor_ != null)
        {
            this._pbinaryAritFactor_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pbinaryAritFactor_ = node;
    }

    public PPmulOp getPmulOp()
    {
        return this._pmulOp_;
    }

    public void setPmulOp(PPmulOp node)
    {
        if(this._pmulOp_ != null)
        {
            this._pmulOp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pmulOp_ = node;
    }

    public PPbinaryAritTermo getPbinaryAritTermo()
    {
        return this._pbinaryAritTermo_;
    }

    public void setPbinaryAritTermo(PPbinaryAritTermo node)
    {
        if(this._pbinaryAritTermo_ != null)
        {
            this._pbinaryAritTermo_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pbinaryAritTermo_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._pbinaryAritFactor_)
            + toString(this._pmulOp_)
            + toString(this._pbinaryAritTermo_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._pbinaryAritFactor_ == child)
        {
            this._pbinaryAritFactor_ = null;
            return;
        }

        if(this._pmulOp_ == child)
        {
            this._pmulOp_ = null;
            return;
        }

        if(this._pbinaryAritTermo_ == child)
        {
            this._pbinaryAritTermo_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._pbinaryAritFactor_ == oldChild)
        {
            setPbinaryAritFactor((PPbinaryAritFactor) newChild);
            return;
        }

        if(this._pmulOp_ == oldChild)
        {
            setPmulOp((PPmulOp) newChild);
            return;
        }

        if(this._pbinaryAritTermo_ == oldChild)
        {
            setPbinaryAritTermo((PPbinaryAritTermo) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
