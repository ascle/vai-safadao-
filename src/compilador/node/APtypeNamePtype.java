/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.node;

import compilador.analysis.*;

@SuppressWarnings("nls")
public final class APtypeNamePtype extends PPtype
{
    private PPtypeName _ptypeName_;

    public APtypeNamePtype()
    {
        // Constructor
    }

    public APtypeNamePtype(
        @SuppressWarnings("hiding") PPtypeName _ptypeName_)
    {
        // Constructor
        setPtypeName(_ptypeName_);

    }

    @Override
    public Object clone()
    {
        return new APtypeNamePtype(
            cloneNode(this._ptypeName_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPtypeNamePtype(this);
    }

    public PPtypeName getPtypeName()
    {
        return this._ptypeName_;
    }

    public void setPtypeName(PPtypeName node)
    {
        if(this._ptypeName_ != null)
        {
            this._ptypeName_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ptypeName_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._ptypeName_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._ptypeName_ == child)
        {
            this._ptypeName_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._ptypeName_ == oldChild)
        {
            setPtypeName((PPtypeName) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
