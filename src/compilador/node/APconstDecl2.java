/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.node;

import compilador.analysis.*;

@SuppressWarnings("nls")
public final class APconstDecl2 extends PPconstDecl2
{
    private TTabreParen _tabreParen_;
    private PPconstDecl3 _pconstDecl3_;

    public APconstDecl2()
    {
        // Constructor
    }

    public APconstDecl2(
        @SuppressWarnings("hiding") TTabreParen _tabreParen_,
        @SuppressWarnings("hiding") PPconstDecl3 _pconstDecl3_)
    {
        // Constructor
        setTabreParen(_tabreParen_);

        setPconstDecl3(_pconstDecl3_);

    }

    @Override
    public Object clone()
    {
        return new APconstDecl2(
            cloneNode(this._tabreParen_),
            cloneNode(this._pconstDecl3_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPconstDecl2(this);
    }

    public TTabreParen getTabreParen()
    {
        return this._tabreParen_;
    }

    public void setTabreParen(TTabreParen node)
    {
        if(this._tabreParen_ != null)
        {
            this._tabreParen_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tabreParen_ = node;
    }

    public PPconstDecl3 getPconstDecl3()
    {
        return this._pconstDecl3_;
    }

    public void setPconstDecl3(PPconstDecl3 node)
    {
        if(this._pconstDecl3_ != null)
        {
            this._pconstDecl3_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pconstDecl3_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._tabreParen_)
            + toString(this._pconstDecl3_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._tabreParen_ == child)
        {
            this._tabreParen_ = null;
            return;
        }

        if(this._pconstDecl3_ == child)
        {
            this._pconstDecl3_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._tabreParen_ == oldChild)
        {
            setTabreParen((TTabreParen) newChild);
            return;
        }

        if(this._pconstDecl3_ == oldChild)
        {
            setPconstDecl3((PPconstDecl3) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
