/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.node;

import compilador.analysis.*;

@SuppressWarnings("nls")
public final class AAssigmentPsimpleStmt extends PPsimpleStmt
{
    private PPassignment _passignment_;

    public AAssigmentPsimpleStmt()
    {
        // Constructor
    }

    public AAssigmentPsimpleStmt(
        @SuppressWarnings("hiding") PPassignment _passignment_)
    {
        // Constructor
        setPassignment(_passignment_);

    }

    @Override
    public Object clone()
    {
        return new AAssigmentPsimpleStmt(
            cloneNode(this._passignment_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAssigmentPsimpleStmt(this);
    }

    public PPassignment getPassignment()
    {
        return this._passignment_;
    }

    public void setPassignment(PPassignment node)
    {
        if(this._passignment_ != null)
        {
            this._passignment_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._passignment_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._passignment_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._passignment_ == child)
        {
            this._passignment_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._passignment_ == oldChild)
        {
            setPassignment((PPassignment) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
