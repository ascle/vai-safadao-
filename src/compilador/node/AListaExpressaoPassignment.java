/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.node;

import compilador.analysis.*;

@SuppressWarnings("nls")
public final class AListaExpressaoPassignment extends PPassignment
{
    private PPexpressionList _pexpressionList_;
    private TTigual _tigual_;
    private PPassignmentFator _passignmentFator_;

    public AListaExpressaoPassignment()
    {
        // Constructor
    }

    public AListaExpressaoPassignment(
        @SuppressWarnings("hiding") PPexpressionList _pexpressionList_,
        @SuppressWarnings("hiding") TTigual _tigual_,
        @SuppressWarnings("hiding") PPassignmentFator _passignmentFator_)
    {
        // Constructor
        setPexpressionList(_pexpressionList_);

        setTigual(_tigual_);

        setPassignmentFator(_passignmentFator_);

    }

    @Override
    public Object clone()
    {
        return new AListaExpressaoPassignment(
            cloneNode(this._pexpressionList_),
            cloneNode(this._tigual_),
            cloneNode(this._passignmentFator_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAListaExpressaoPassignment(this);
    }

    public PPexpressionList getPexpressionList()
    {
        return this._pexpressionList_;
    }

    public void setPexpressionList(PPexpressionList node)
    {
        if(this._pexpressionList_ != null)
        {
            this._pexpressionList_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pexpressionList_ = node;
    }

    public TTigual getTigual()
    {
        return this._tigual_;
    }

    public void setTigual(TTigual node)
    {
        if(this._tigual_ != null)
        {
            this._tigual_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tigual_ = node;
    }

    public PPassignmentFator getPassignmentFator()
    {
        return this._passignmentFator_;
    }

    public void setPassignmentFator(PPassignmentFator node)
    {
        if(this._passignmentFator_ != null)
        {
            this._passignmentFator_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._passignmentFator_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._pexpressionList_)
            + toString(this._tigual_)
            + toString(this._passignmentFator_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._pexpressionList_ == child)
        {
            this._pexpressionList_ = null;
            return;
        }

        if(this._tigual_ == child)
        {
            this._tigual_ = null;
            return;
        }

        if(this._passignmentFator_ == child)
        {
            this._passignmentFator_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._pexpressionList_ == oldChild)
        {
            setPexpressionList((PPexpressionList) newChild);
            return;
        }

        if(this._tigual_ == oldChild)
        {
            setTigual((TTigual) newChild);
            return;
        }

        if(this._passignmentFator_ == oldChild)
        {
            setPassignmentFator((PPassignmentFator) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
