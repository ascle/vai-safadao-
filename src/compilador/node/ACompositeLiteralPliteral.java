/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.node;

import compilador.analysis.*;

@SuppressWarnings("nls")
public final class ACompositeLiteralPliteral extends PPliteral
{
    private PPcompositeLit _pcompositeLit_;

    public ACompositeLiteralPliteral()
    {
        // Constructor
    }

    public ACompositeLiteralPliteral(
        @SuppressWarnings("hiding") PPcompositeLit _pcompositeLit_)
    {
        // Constructor
        setPcompositeLit(_pcompositeLit_);

    }

    @Override
    public Object clone()
    {
        return new ACompositeLiteralPliteral(
            cloneNode(this._pcompositeLit_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseACompositeLiteralPliteral(this);
    }

    public PPcompositeLit getPcompositeLit()
    {
        return this._pcompositeLit_;
    }

    public void setPcompositeLit(PPcompositeLit node)
    {
        if(this._pcompositeLit_ != null)
        {
            this._pcompositeLit_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pcompositeLit_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._pcompositeLit_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._pcompositeLit_ == child)
        {
            this._pcompositeLit_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._pcompositeLit_ == oldChild)
        {
            setPcompositeLit((PPcompositeLit) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
