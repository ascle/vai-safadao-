/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.node;

import compilador.analysis.*;

@SuppressWarnings("nls")
public final class APconstSpecIdent extends PPconstSpecIdent
{
    private PPidentifierList _pidentifierList_;
    private PPconstSpec _pconstSpec_;

    public APconstSpecIdent()
    {
        // Constructor
    }

    public APconstSpecIdent(
        @SuppressWarnings("hiding") PPidentifierList _pidentifierList_,
        @SuppressWarnings("hiding") PPconstSpec _pconstSpec_)
    {
        // Constructor
        setPidentifierList(_pidentifierList_);

        setPconstSpec(_pconstSpec_);

    }

    @Override
    public Object clone()
    {
        return new APconstSpecIdent(
            cloneNode(this._pidentifierList_),
            cloneNode(this._pconstSpec_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPconstSpecIdent(this);
    }

    public PPidentifierList getPidentifierList()
    {
        return this._pidentifierList_;
    }

    public void setPidentifierList(PPidentifierList node)
    {
        if(this._pidentifierList_ != null)
        {
            this._pidentifierList_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pidentifierList_ = node;
    }

    public PPconstSpec getPconstSpec()
    {
        return this._pconstSpec_;
    }

    public void setPconstSpec(PPconstSpec node)
    {
        if(this._pconstSpec_ != null)
        {
            this._pconstSpec_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pconstSpec_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._pidentifierList_)
            + toString(this._pconstSpec_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._pidentifierList_ == child)
        {
            this._pidentifierList_ = null;
            return;
        }

        if(this._pconstSpec_ == child)
        {
            this._pconstSpec_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._pidentifierList_ == oldChild)
        {
            setPidentifierList((PPidentifierList) newChild);
            return;
        }

        if(this._pconstSpec_ == oldChild)
        {
            setPconstSpec((PPconstSpec) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
