/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.node;

import compilador.analysis.*;

@SuppressWarnings("nls")
public final class APforClauseFator extends PPforClauseFator
{
    private TTpontoEVirgula _tpontoEVirgula_;
    private PPpostStmt _ppostStmt_;

    public APforClauseFator()
    {
        // Constructor
    }

    public APforClauseFator(
        @SuppressWarnings("hiding") TTpontoEVirgula _tpontoEVirgula_,
        @SuppressWarnings("hiding") PPpostStmt _ppostStmt_)
    {
        // Constructor
        setTpontoEVirgula(_tpontoEVirgula_);

        setPpostStmt(_ppostStmt_);

    }

    @Override
    public Object clone()
    {
        return new APforClauseFator(
            cloneNode(this._tpontoEVirgula_),
            cloneNode(this._ppostStmt_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPforClauseFator(this);
    }

    public TTpontoEVirgula getTpontoEVirgula()
    {
        return this._tpontoEVirgula_;
    }

    public void setTpontoEVirgula(TTpontoEVirgula node)
    {
        if(this._tpontoEVirgula_ != null)
        {
            this._tpontoEVirgula_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tpontoEVirgula_ = node;
    }

    public PPpostStmt getPpostStmt()
    {
        return this._ppostStmt_;
    }

    public void setPpostStmt(PPpostStmt node)
    {
        if(this._ppostStmt_ != null)
        {
            this._ppostStmt_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ppostStmt_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._tpontoEVirgula_)
            + toString(this._ppostStmt_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._tpontoEVirgula_ == child)
        {
            this._tpontoEVirgula_ = null;
            return;
        }

        if(this._ppostStmt_ == child)
        {
            this._ppostStmt_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._tpontoEVirgula_ == oldChild)
        {
            setTpontoEVirgula((TTpontoEVirgula) newChild);
            return;
        }

        if(this._ppostStmt_ == oldChild)
        {
            setPpostStmt((PPpostStmt) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
