/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.node;

import compilador.analysis.*;

@SuppressWarnings("nls")
public final class AFuncaoListPliteral extends PPliteral
{
    private PPfunctionList _pfunctionList_;

    public AFuncaoListPliteral()
    {
        // Constructor
    }

    public AFuncaoListPliteral(
        @SuppressWarnings("hiding") PPfunctionList _pfunctionList_)
    {
        // Constructor
        setPfunctionList(_pfunctionList_);

    }

    @Override
    public Object clone()
    {
        return new AFuncaoListPliteral(
            cloneNode(this._pfunctionList_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAFuncaoListPliteral(this);
    }

    public PPfunctionList getPfunctionList()
    {
        return this._pfunctionList_;
    }

    public void setPfunctionList(PPfunctionList node)
    {
        if(this._pfunctionList_ != null)
        {
            this._pfunctionList_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pfunctionList_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._pfunctionList_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._pfunctionList_ == child)
        {
            this._pfunctionList_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._pfunctionList_ == oldChild)
        {
            setPfunctionList((PPfunctionList) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
