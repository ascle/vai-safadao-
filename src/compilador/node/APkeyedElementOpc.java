/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.node;

import compilador.analysis.*;

@SuppressWarnings("nls")
public final class APkeyedElementOpc extends PPkeyedElementOpc
{
    private PPkey _pkey_;
    private TTdoispontos _tdoispontos_;

    public APkeyedElementOpc()
    {
        // Constructor
    }

    public APkeyedElementOpc(
        @SuppressWarnings("hiding") PPkey _pkey_,
        @SuppressWarnings("hiding") TTdoispontos _tdoispontos_)
    {
        // Constructor
        setPkey(_pkey_);

        setTdoispontos(_tdoispontos_);

    }

    @Override
    public Object clone()
    {
        return new APkeyedElementOpc(
            cloneNode(this._pkey_),
            cloneNode(this._tdoispontos_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPkeyedElementOpc(this);
    }

    public PPkey getPkey()
    {
        return this._pkey_;
    }

    public void setPkey(PPkey node)
    {
        if(this._pkey_ != null)
        {
            this._pkey_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pkey_ = node;
    }

    public TTdoispontos getTdoispontos()
    {
        return this._tdoispontos_;
    }

    public void setTdoispontos(TTdoispontos node)
    {
        if(this._tdoispontos_ != null)
        {
            this._tdoispontos_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tdoispontos_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._pkey_)
            + toString(this._tdoispontos_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._pkey_ == child)
        {
            this._pkey_ = null;
            return;
        }

        if(this._tdoispontos_ == child)
        {
            this._tdoispontos_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._pkey_ == oldChild)
        {
            setPkey((PPkey) newChild);
            return;
        }

        if(this._tdoispontos_ == oldChild)
        {
            setTdoispontos((TTdoispontos) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
