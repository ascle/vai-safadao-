/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.node;

import compilador.analysis.*;

@SuppressWarnings("nls")
public final class APelse extends PPelse
{
    private TTelse _telse_;
    private PPelseAgrup _pelseAgrup_;

    public APelse()
    {
        // Constructor
    }

    public APelse(
        @SuppressWarnings("hiding") TTelse _telse_,
        @SuppressWarnings("hiding") PPelseAgrup _pelseAgrup_)
    {
        // Constructor
        setTelse(_telse_);

        setPelseAgrup(_pelseAgrup_);

    }

    @Override
    public Object clone()
    {
        return new APelse(
            cloneNode(this._telse_),
            cloneNode(this._pelseAgrup_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPelse(this);
    }

    public TTelse getTelse()
    {
        return this._telse_;
    }

    public void setTelse(TTelse node)
    {
        if(this._telse_ != null)
        {
            this._telse_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._telse_ = node;
    }

    public PPelseAgrup getPelseAgrup()
    {
        return this._pelseAgrup_;
    }

    public void setPelseAgrup(PPelseAgrup node)
    {
        if(this._pelseAgrup_ != null)
        {
            this._pelseAgrup_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pelseAgrup_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._telse_)
            + toString(this._pelseAgrup_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._telse_ == child)
        {
            this._telse_ = null;
            return;
        }

        if(this._pelseAgrup_ == child)
        {
            this._pelseAgrup_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._telse_ == oldChild)
        {
            setTelse((TTelse) newChild);
            return;
        }

        if(this._pelseAgrup_ == oldChild)
        {
            setPelseAgrup((PPelseAgrup) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
