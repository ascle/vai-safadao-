/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.node;

import compilador.analysis.*;

@SuppressWarnings("nls")
public final class APbinaryRelTermo extends PPbinaryRelTermo
{
    private TTabreParen _tabreParen_;
    private PPbinaryRelExp _pbinaryRelExp_;
    private TTfechaParen _tfechaParen_;

    public APbinaryRelTermo()
    {
        // Constructor
    }

    public APbinaryRelTermo(
        @SuppressWarnings("hiding") TTabreParen _tabreParen_,
        @SuppressWarnings("hiding") PPbinaryRelExp _pbinaryRelExp_,
        @SuppressWarnings("hiding") TTfechaParen _tfechaParen_)
    {
        // Constructor
        setTabreParen(_tabreParen_);

        setPbinaryRelExp(_pbinaryRelExp_);

        setTfechaParen(_tfechaParen_);

    }

    @Override
    public Object clone()
    {
        return new APbinaryRelTermo(
            cloneNode(this._tabreParen_),
            cloneNode(this._pbinaryRelExp_),
            cloneNode(this._tfechaParen_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPbinaryRelTermo(this);
    }

    public TTabreParen getTabreParen()
    {
        return this._tabreParen_;
    }

    public void setTabreParen(TTabreParen node)
    {
        if(this._tabreParen_ != null)
        {
            this._tabreParen_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tabreParen_ = node;
    }

    public PPbinaryRelExp getPbinaryRelExp()
    {
        return this._pbinaryRelExp_;
    }

    public void setPbinaryRelExp(PPbinaryRelExp node)
    {
        if(this._pbinaryRelExp_ != null)
        {
            this._pbinaryRelExp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pbinaryRelExp_ = node;
    }

    public TTfechaParen getTfechaParen()
    {
        return this._tfechaParen_;
    }

    public void setTfechaParen(TTfechaParen node)
    {
        if(this._tfechaParen_ != null)
        {
            this._tfechaParen_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tfechaParen_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._tabreParen_)
            + toString(this._pbinaryRelExp_)
            + toString(this._tfechaParen_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._tabreParen_ == child)
        {
            this._tabreParen_ = null;
            return;
        }

        if(this._pbinaryRelExp_ == child)
        {
            this._pbinaryRelExp_ = null;
            return;
        }

        if(this._tfechaParen_ == child)
        {
            this._tfechaParen_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._tabreParen_ == oldChild)
        {
            setTabreParen((TTabreParen) newChild);
            return;
        }

        if(this._pbinaryRelExp_ == oldChild)
        {
            setPbinaryRelExp((PPbinaryRelExp) newChild);
            return;
        }

        if(this._tfechaParen_ == oldChild)
        {
            setTfechaParen((TTfechaParen) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
