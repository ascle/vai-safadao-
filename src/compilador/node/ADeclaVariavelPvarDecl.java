/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.node;

import compilador.analysis.*;

@SuppressWarnings("nls")
public final class ADeclaVariavelPvarDecl extends PPvarDecl
{
    private TTvar _tvar_;
    private PPvarDeclAgrup _pvarDeclAgrup_;

    public ADeclaVariavelPvarDecl()
    {
        // Constructor
    }

    public ADeclaVariavelPvarDecl(
        @SuppressWarnings("hiding") TTvar _tvar_,
        @SuppressWarnings("hiding") PPvarDeclAgrup _pvarDeclAgrup_)
    {
        // Constructor
        setTvar(_tvar_);

        setPvarDeclAgrup(_pvarDeclAgrup_);

    }

    @Override
    public Object clone()
    {
        return new ADeclaVariavelPvarDecl(
            cloneNode(this._tvar_),
            cloneNode(this._pvarDeclAgrup_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADeclaVariavelPvarDecl(this);
    }

    public TTvar getTvar()
    {
        return this._tvar_;
    }

    public void setTvar(TTvar node)
    {
        if(this._tvar_ != null)
        {
            this._tvar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tvar_ = node;
    }

    public PPvarDeclAgrup getPvarDeclAgrup()
    {
        return this._pvarDeclAgrup_;
    }

    public void setPvarDeclAgrup(PPvarDeclAgrup node)
    {
        if(this._pvarDeclAgrup_ != null)
        {
            this._pvarDeclAgrup_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pvarDeclAgrup_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._tvar_)
            + toString(this._pvarDeclAgrup_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._tvar_ == child)
        {
            this._tvar_ = null;
            return;
        }

        if(this._pvarDeclAgrup_ == child)
        {
            this._pvarDeclAgrup_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._tvar_ == oldChild)
        {
            setTvar((TTvar) newChild);
            return;
        }

        if(this._pvarDeclAgrup_ == oldChild)
        {
            setPvarDeclAgrup((PPvarDeclAgrup) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
