/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.parser;

import compilador.lexer.*;
import compilador.node.*;
import compilador.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList<Object> nodeList;

    private final Lexer lexer;
    private final ListIterator<Object> stack = new LinkedList<Object>().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    protected void filter() throws ParserException, LexerException, IOException
    {
        // Empty body
    }

    private void push(int numstate, ArrayList<Object> listNode, boolean hidden) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!hidden)
        {
            filter();
        }

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            // int middle = (low + high) / 2;
            int middle = (low + high) >>> 1;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList<Object> pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null, true);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList<Object> list = new ArrayList<Object>();
		        list.add(this.lexer.next());
                        push(this.action[1], list, false);
                    }
		    break;
                case REDUCE:
                    {
                        int reduction = this.action[1];
                        if(reduction < 500) reduce_0(reduction);
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PPprogram node1 = (PPprogram) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }

    private void reduce_0(int reduction) throws IOException, LexerException, ParserException
    {
        switch(reduction)
        {
            case 0: /* reduce APprogramLoopPprogram */
            {
                ArrayList<Object> list = new0();
                push(goTo(0), list, false);
            }
            break;
            case 1: /* reduce APprogramLoop */
            {
                ArrayList<Object> list = new1();
                push(goTo(1), list, false);
            }
            break;
            case 2: /* reduce APdeclarationPtopLevelDecl */
            {
                ArrayList<Object> list = new2();
                push(goTo(2), list, false);
            }
            break;
            case 3: /* reduce APfunctionDeclPtopLevelDecl */
            {
                ArrayList<Object> list = new3();
                push(goTo(2), list, false);
            }
            break;
            case 4: /* reduce APmethodDeclPtopLevelDecl */
            {
                ArrayList<Object> list = new4();
                push(goTo(2), list, false);
            }
            break;
            case 5: /* reduce APconstDeclPdeclaration */
            {
                ArrayList<Object> list = new5();
                push(goTo(3), list, false);
            }
            break;
            case 6: /* reduce APvarDeclPdeclaration */
            {
                ArrayList<Object> list = new6();
                push(goTo(3), list, false);
            }
            break;
            case 7: /* reduce APfunctionDecl */
            {
                ArrayList<Object> list = new7();
                push(goTo(4), list, false);
            }
            break;
            case 8: /* reduce APfunctionPfunctionDeclAgrup */
            {
                ArrayList<Object> list = new8();
                push(goTo(5), list, false);
            }
            break;
            case 9: /* reduce APsignaturePfunctionDeclAgrup */
            {
                ArrayList<Object> list = new9();
                push(goTo(5), list, false);
            }
            break;
            case 10: /* reduce APfunctionName */
            {
                ArrayList<Object> list = new10();
                push(goTo(6), list, false);
            }
            break;
            case 11: /* reduce APfunction */
            {
                ArrayList<Object> list = new11();
                push(goTo(7), list, false);
            }
            break;
            case 12: /* reduce APfunctionBody */
            {
                ArrayList<Object> list = new12();
                push(goTo(8), list, false);
            }
            break;
            case 13: /* reduce APmethodDecl */
            {
                ArrayList<Object> list = new13();
                push(goTo(9), list, false);
            }
            break;
            case 14: /* reduce APfunctionPmethodDeclAgrup */
            {
                ArrayList<Object> list = new14();
                push(goTo(10), list, false);
            }
            break;
            case 15: /* reduce APsignaturePmethodDeclAgrup */
            {
                ArrayList<Object> list = new15();
                push(goTo(10), list, false);
            }
            break;
            case 16: /* reduce APreceiver */
            {
                ArrayList<Object> list = new16();
                push(goTo(11), list, false);
            }
            break;
            case 17: /* reduce APmethodName */
            {
                ArrayList<Object> list = new17();
                push(goTo(12), list, false);
            }
            break;
            case 18: /* reduce AApparameters1Pparameters */
            {
                ArrayList<Object> list = new18();
                push(goTo(13), list, false);
            }
            break;
            case 19: /* reduce AApparameters2Pparameters */
            {
                ArrayList<Object> list = new19();
                push(goTo(13), list, false);
            }
            break;
            case 20: /* reduce AApparametersop1PparametersOp */
            {
                ArrayList<Object> list = new20();
                push(goTo(14), list, false);
            }
            break;
            case 21: /* reduce AApparametersop2PparametersOp */
            {
                ArrayList<Object> list = new21();
                push(goTo(14), list, false);
            }
            break;
            case 22: /* reduce APparameterListLoopPparameterList */
            {
                ArrayList<Object> list = new22();
                push(goTo(15), list, false);
            }
            break;
            case 23: /* reduce APparameterDeclPparameterList */
            {
                ArrayList<Object> list = new23();
                push(goTo(15), list, false);
            }
            break;
            case 24: /* reduce APparameterListLoop */
            {
                ArrayList<Object> list = new24();
                push(goTo(16), list, false);
            }
            break;
            case 25: /* reduce AApparameterdecl1PparameterDecl */
            {
                ArrayList<Object> list = new25();
                push(goTo(17), list, false);
            }
            break;
            case 26: /* reduce AApparameterdecl2PparameterDecl */
            {
                ArrayList<Object> list = new26();
                push(goTo(17), list, false);
            }
            break;
            case 27: /* reduce APidentifierListPidentifierList */
            {
                ArrayList<Object> list = new27();
                push(goTo(18), list, false);
            }
            break;
            case 28: /* reduce APidentifierList */
            {
                ArrayList<Object> list = new28();
                push(goTo(18), list, false);
            }
            break;
            case 29: /* reduce APconstDecl */
            {
                ArrayList<Object> list = new29();
                push(goTo(19), list, false);
            }
            break;
            case 30: /* reduce APconstSpecIdentPconstDecl2 */
            {
                ArrayList<Object> list = new30();
                push(goTo(20), list, false);
            }
            break;
            case 31: /* reduce APconstDecl2 */
            {
                ArrayList<Object> list = new31();
                push(goTo(20), list, false);
            }
            break;
            case 32: /* reduce APconstDeclConteudoPconstDecl3 */
            {
                ArrayList<Object> list = new32();
                push(goTo(21), list, false);
            }
            break;
            case 33: /* reduce APconstDeclConteudo */
            {
                ArrayList<Object> list = new33();
                push(goTo(22), list, false);
            }
            break;
            case 34: /* reduce APconstSpecIdent */
            {
                ArrayList<Object> list = new34();
                push(goTo(23), list, false);
            }
            break;
            case 35: /* reduce APconstSpec2PconstSpec */
            {
                ArrayList<Object> list = new35();
                push(goTo(24), list, false);
            }
            break;
            case 36: /* reduce APtypePconstSpec2 */
            {
                ArrayList<Object> list = new36();
                push(goTo(25), list, false);
            }
            break;
            case 37: /* reduce APexpressionListLoopPexpressionList */
            {
                ArrayList<Object> list = new37();
                push(goTo(26), list, false);
            }
            break;
            case 38: /* reduce APexpressionList */
            {
                ArrayList<Object> list = new38();
                push(goTo(26), list, false);
            }
            break;
            case 39: /* reduce APexpressionListLoop */
            {
                ArrayList<Object> list = new39();
                push(goTo(27), list, false);
            }
            break;
            case 40: /* reduce APunaryExprPexpression */
            {
                ArrayList<Object> list = new40();
                push(goTo(28), list, false);
            }
            break;
            case 41: /* reduce APexpression */
            {
                ArrayList<Object> list = new41();
                push(goTo(28), list, false);
            }
            break;
            case 42: /* reduce APbinaryLogicoExpPbinaryExpr */
            {
                ArrayList<Object> list = new42();
                push(goTo(29), list, false);
            }
            break;
            case 43: /* reduce APbinaryRelExpPbinaryExpr */
            {
                ArrayList<Object> list = new43();
                push(goTo(29), list, false);
            }
            break;
            case 44: /* reduce APbinaryAritExpPbinaryExpr */
            {
                ArrayList<Object> list = new44();
                push(goTo(29), list, false);
            }
            break;
            case 45: /* reduce APprimaryExprPunaryExpr */
            {
                ArrayList<Object> list = new45();
                push(goTo(30), list, false);
            }
            break;
            case 46: /* reduce APunaryExpr */
            {
                ArrayList<Object> list = new46();
                push(goTo(30), list, false);
            }
            break;
            case 47: /* reduce ATadicaoPunaryOp */
            {
                ArrayList<Object> list = new47();
                push(goTo(31), list, false);
            }
            break;
            case 48: /* reduce ATsubtracaoPunaryOp */
            {
                ArrayList<Object> list = new48();
                push(goTo(31), list, false);
            }
            break;
            case 49: /* reduce ATnotLogicoPunaryOp */
            {
                ArrayList<Object> list = new49();
                push(goTo(31), list, false);
            }
            break;
            case 50: /* reduce APbinaryLogicoExp */
            {
                ArrayList<Object> list = new50();
                push(goTo(32), list, false);
            }
            break;
            case 51: /* reduce APbinaryLogicoFactor */
            {
                ArrayList<Object> list = new51();
                push(goTo(33), list, false);
            }
            break;
            case 52: /* reduce APbinaryLogicoTermo */
            {
                ArrayList<Object> list = new52();
                push(goTo(34), list, false);
            }
            break;
            case 53: /* reduce ATidentifierPbinaryLogicoTermo */
            {
                ArrayList<Object> list = new53();
                push(goTo(34), list, false);
            }
            break;
            case 54: /* reduce APbinaryRelExp */
            {
                ArrayList<Object> list = new54();
                push(goTo(35), list, false);
            }
            break;
            case 55: /* reduce APbinaryRelTermo */
            {
                ArrayList<Object> list = new55();
                push(goTo(36), list, false);
            }
            break;
            case 56: /* reduce ATidentifierPbinaryRelTermo */
            {
                ArrayList<Object> list = new56();
                push(goTo(36), list, false);
            }
            break;
            case 57: /* reduce ATigualIgualPrelOp */
            {
                ArrayList<Object> list = new57();
                push(goTo(37), list, false);
            }
            break;
            case 58: /* reduce ATmenorPrelOp */
            {
                ArrayList<Object> list = new58();
                push(goTo(37), list, false);
            }
            break;
            case 59: /* reduce ATmaiorPrelOp */
            {
                ArrayList<Object> list = new59();
                push(goTo(37), list, false);
            }
            break;
            case 60: /* reduce APbinaryAritExp */
            {
                ArrayList<Object> list = new60();
                push(goTo(38), list, false);
            }
            break;
            case 61: /* reduce APbinaryAritFactor */
            {
                ArrayList<Object> list = new61();
                push(goTo(39), list, false);
            }
            break;
            case 62: /* reduce APbinaryAritTermo */
            {
                ArrayList<Object> list = new62();
                push(goTo(40), list, false);
            }
            break;
            case 63: /* reduce ATsubtracaoPbinaryAritTermo */
            {
                ArrayList<Object> list = new63();
                push(goTo(40), list, false);
            }
            break;
            case 64: /* reduce ATadicaoPaddOp */
            {
                ArrayList<Object> list = new64();
                push(goTo(41), list, false);
            }
            break;
            case 65: /* reduce ATsubtracaoPaddOp */
            {
                ArrayList<Object> list = new65();
                push(goTo(41), list, false);
            }
            break;
            case 66: /* reduce ATestrelaPmulOp */
            {
                ArrayList<Object> list = new66();
                push(goTo(42), list, false);
            }
            break;
            case 67: /* reduce ATbarraPmulOp */
            {
                ArrayList<Object> list = new67();
                push(goTo(42), list, false);
            }
            break;
            case 68: /* reduce APtypeNamePtype */
            {
                ArrayList<Object> list = new68();
                push(goTo(43), list, false);
            }
            break;
            case 69: /* reduce APtypeListPtype */
            {
                ArrayList<Object> list = new69();
                push(goTo(43), list, false);
            }
            break;
            case 70: /* reduce APtype */
            {
                ArrayList<Object> list = new70();
                push(goTo(43), list, false);
            }
            break;
            case 71: /* reduce APtypeName */
            {
                ArrayList<Object> list = new71();
                push(goTo(44), list, false);
            }
            break;
            case 72: /* reduce ATipoArrayPtypeList */
            {
                ArrayList<Object> list = new72();
                push(goTo(45), list, false);
            }
            break;
            case 73: /* reduce ATipoFuncaoPtypeList */
            {
                ArrayList<Object> list = new73();
                push(goTo(45), list, false);
            }
            break;
            case 74: /* reduce AParrayType */
            {
                ArrayList<Object> list = new74();
                push(goTo(46), list, false);
            }
            break;
            case 75: /* reduce AParrayLength */
            {
                ArrayList<Object> list = new75();
                push(goTo(47), list, false);
            }
            break;
            case 76: /* reduce APelementType */
            {
                ArrayList<Object> list = new76();
                push(goTo(48), list, false);
            }
            break;
            case 77: /* reduce APfunctionptype */
            {
                ArrayList<Object> list = new77();
                push(goTo(49), list, false);
            }
            break;
            case 78: /* reduce AApsignature1Psignature */
            {
                ArrayList<Object> list = new78();
                push(goTo(50), list, false);
            }
            break;
            case 79: /* reduce AApsignature2Psignature */
            {
                ArrayList<Object> list = new79();
                push(goTo(50), list, false);
            }
            break;
            case 80: /* reduce AParametrosPresult */
            {
                ArrayList<Object> list = new80();
                push(goTo(51), list, false);
            }
            break;
            case 81: /* reduce ATipoPresult */
            {
                ArrayList<Object> list = new81();
                push(goTo(51), list, false);
            }
            break;
            case 82: /* reduce AApparametersopcional1PparametersOpcional */
            {
                ArrayList<Object> list = new82();
                push(goTo(52), list, false);
            }
            break;
            case 83: /* reduce AApparametersopcional2PparametersOpcional */
            {
                ArrayList<Object> list = new83();
                push(goTo(52), list, false);
            }
            break;
            case 84: /* reduce ADeclaVariavelPvarDecl */
            {
                ArrayList<Object> list = new84();
                push(goTo(53), list, false);
            }
            break;
            case 85: /* reduce ADeclaGrupoPvarDeclAgrup */
            {
                ArrayList<Object> list = new85();
                push(goTo(54), list, false);
            }
            break;
            case 86: /* reduce APvarDeclAgrup */
            {
                ArrayList<Object> list = new86();
                push(goTo(54), list, false);
            }
            break;
            case 87: /* reduce APvarDeclAgrupLoopPvarDeclAgrupParen */
            {
                ArrayList<Object> list = new87();
                push(goTo(55), list, false);
            }
            break;
            case 88: /* reduce APvarDeclAgrupLoop */
            {
                ArrayList<Object> list = new88();
                push(goTo(56), list, false);
            }
            break;
            case 89: /* reduce APvarSpec */
            {
                ArrayList<Object> list = new89();
                push(goTo(57), list, false);
            }
            break;
            case 90: /* reduce AAvariavelespcpvarspecagrup1PvarSpecAgrup */
            {
                ArrayList<Object> list = new90();
                push(goTo(58), list, false);
            }
            break;
            case 91: /* reduce AAvariavelespcpvarspecagrup2PvarSpecAgrup */
            {
                ArrayList<Object> list = new91();
                push(goTo(58), list, false);
            }
            break;
            case 92: /* reduce APvarSpecAgrup */
            {
                ArrayList<Object> list = new92();
                push(goTo(58), list, false);
            }
            break;
            case 93: /* reduce APvarSpecAgrupOpc */
            {
                ArrayList<Object> list = new93();
                push(goTo(59), list, false);
            }
            break;
            case 94: /* reduce AExpressaoPrimaPprimaryExpr */
            {
                ArrayList<Object> list = new94();
                push(goTo(60), list, false);
            }
            break;
            case 95: /* reduce AConversaoPprimaryExpr */
            {
                ArrayList<Object> list = new95();
                push(goTo(60), list, false);
            }
            break;
            case 96: /* reduce AIndicePprimaryExpr */
            {
                ArrayList<Object> list = new96();
                push(goTo(60), list, false);
            }
            break;
            case 97: /* reduce AArgumentosPprimaryExpr */
            {
                ArrayList<Object> list = new97();
                push(goTo(60), list, false);
            }
            break;
            case 98: /* reduce ALiteralPoperand */
            {
                ArrayList<Object> list = new98();
                push(goTo(61), list, false);
            }
            break;
            case 99: /* reduce ATidentifierPoperand */
            {
                ArrayList<Object> list = new99();
                push(goTo(61), list, false);
            }
            break;
            case 100: /* reduce ATabreParenPoperand */
            {
                ArrayList<Object> list = new100();
                push(goTo(61), list, false);
            }
            break;
            case 101: /* reduce ABaseLiteralPliteral */
            {
                ArrayList<Object> list = new101();
                push(goTo(62), list, false);
            }
            break;
            case 102: /* reduce ACompositeLiteralPliteral */
            {
                ArrayList<Object> list = new102();
                push(goTo(62), list, false);
            }
            break;
            case 103: /* reduce AFuncaoListPliteral */
            {
                ArrayList<Object> list = new103();
                push(goTo(62), list, false);
            }
            break;
            case 104: /* reduce APbasicLit */
            {
                ArrayList<Object> list = new104();
                push(goTo(63), list, false);
            }
            break;
            case 105: /* reduce APcompositeLit */
            {
                ArrayList<Object> list = new105();
                push(goTo(64), list, false);
            }
            break;
            case 106: /* reduce APliteralType */
            {
                ArrayList<Object> list = new106();
                push(goTo(65), list, false);
            }
            break;
            case 107: /* reduce ATabreColchetePliteralType */
            {
                ArrayList<Object> list = new107();
                push(goTo(65), list, false);
            }
            break;
            case 108: /* reduce AApliteralvalue1PliteralValue */
            {
                ArrayList<Object> list = new108();
                push(goTo(66), list, false);
            }
            break;
            case 109: /* reduce AApliteralvalue2PliteralValue */
            {
                ArrayList<Object> list = new109();
                push(goTo(66), list, false);
            }
            break;
            case 110: /* reduce AApliteralvalueopc1PliteralValueOpc */
            {
                ArrayList<Object> list = new110();
                push(goTo(67), list, false);
            }
            break;
            case 111: /* reduce AApliteralvalueopc2PliteralValueOpc */
            {
                ArrayList<Object> list = new111();
                push(goTo(67), list, false);
            }
            break;
            case 112: /* reduce AElementoLoopPelementLit */
            {
                ArrayList<Object> list = new112();
                push(goTo(68), list, false);
            }
            break;
            case 113: /* reduce APelementLit */
            {
                ArrayList<Object> list = new113();
                push(goTo(68), list, false);
            }
            break;
            case 114: /* reduce APelementLitLoop */
            {
                ArrayList<Object> list = new114();
                push(goTo(69), list, false);
            }
            break;
            case 115: /* reduce AApkeyedelement1PkeyedElement */
            {
                ArrayList<Object> list = new115();
                push(goTo(70), list, false);
            }
            break;
            case 116: /* reduce AApkeyedelement2PkeyedElement */
            {
                ArrayList<Object> list = new116();
                push(goTo(70), list, false);
            }
            break;
            case 117: /* reduce APkeyedElementOpc */
            {
                ArrayList<Object> list = new117();
                push(goTo(71), list, false);
            }
            break;
            case 118: /* reduce ANmeCampoPkey */
            {
                ArrayList<Object> list = new118();
                push(goTo(72), list, false);
            }
            break;
            case 119: /* reduce AExpressaoPkey */
            {
                ArrayList<Object> list = new119();
                push(goTo(72), list, false);
            }
            break;
            case 120: /* reduce AValorLiteralPkey */
            {
                ArrayList<Object> list = new120();
                push(goTo(72), list, false);
            }
            break;
            case 121: /* reduce APfieldName */
            {
                ArrayList<Object> list = new121();
                push(goTo(73), list, false);
            }
            break;
            case 122: /* reduce AExpressaoPelement */
            {
                ArrayList<Object> list = new122();
                push(goTo(74), list, false);
            }
            break;
            case 123: /* reduce APelement */
            {
                ArrayList<Object> list = new123();
                push(goTo(74), list, false);
            }
            break;
            case 124: /* reduce APfunctionList */
            {
                ArrayList<Object> list = new124();
                push(goTo(75), list, false);
            }
            break;
            case 125: /* reduce AApconversion1Pconversion */
            {
                ArrayList<Object> list = new125();
                push(goTo(76), list, false);
            }
            break;
            case 126: /* reduce AApconversion2Pconversion */
            {
                ArrayList<Object> list = new126();
                push(goTo(76), list, false);
            }
            break;
            case 127: /* reduce APindex */
            {
                ArrayList<Object> list = new127();
                push(goTo(77), list, false);
            }
            break;
            case 128: /* reduce AAparguments1Parguments */
            {
                ArrayList<Object> list = new128();
                push(goTo(78), list, false);
            }
            break;
            case 129: /* reduce AAparguments2Parguments */
            {
                ArrayList<Object> list = new129();
                push(goTo(78), list, false);
            }
            break;
            case 130: /* reduce AApargumentscorpo1PargumentsCorpo */
            {
                ArrayList<Object> list = new130();
                push(goTo(79), list, false);
            }
            break;
            case 131: /* reduce AApargumentscorpo2PargumentsCorpo */
            {
                ArrayList<Object> list = new131();
                push(goTo(79), list, false);
            }
            break;
            case 132: /* reduce AApargumentscorpo3PargumentsCorpo */
            {
                ArrayList<Object> list = new132();
                push(goTo(79), list, false);
            }
            break;
            case 133: /* reduce AApargumentscorpo4PargumentsCorpo */
            {
                ArrayList<Object> list = new133();
                push(goTo(79), list, false);
            }
            break;
            case 134: /* reduce AListaExpressaoPargumentsCorpoAgrup */
            {
                ArrayList<Object> list = new134();
                push(goTo(80), list, false);
            }
            break;
            case 135: /* reduce AAtipopargumentscorpoagrup1PargumentsCorpoAgrup */
            {
                ArrayList<Object> list = new135();
                push(goTo(80), list, false);
            }
            break;
            case 136: /* reduce AAtipopargumentscorpoagrup2PargumentsCorpoAgrup */
            {
                ArrayList<Object> list = new136();
                push(goTo(80), list, false);
            }
            break;
            case 137: /* reduce APblock */
            {
                ArrayList<Object> list = new137();
                push(goTo(81), list, false);
            }
            break;
            case 138: /* reduce APstatementListLoopPstatementList */
            {
                ArrayList<Object> list = new138();
                push(goTo(82), list, false);
            }
            break;
            case 139: /* reduce APstatementListLoop */
            {
                ArrayList<Object> list = new139();
                push(goTo(83), list, false);
            }
            break;
            case 140: /* reduce ADeclaracaoPstatement */
            {
                ArrayList<Object> list = new140();
                push(goTo(84), list, false);
            }
            break;
            case 141: /* reduce AStmlSimplesPstatement */
            {
                ArrayList<Object> list = new141();
                push(goTo(84), list, false);
            }
            break;
            case 142: /* reduce ARetornoPstatement */
            {
                ArrayList<Object> list = new142();
                push(goTo(84), list, false);
            }
            break;
            case 143: /* reduce ABlocoPstatement */
            {
                ArrayList<Object> list = new143();
                push(goTo(84), list, false);
            }
            break;
            case 144: /* reduce AIfPstatement */
            {
                ArrayList<Object> list = new144();
                push(goTo(84), list, false);
            }
            break;
            case 145: /* reduce AForPstatement */
            {
                ArrayList<Object> list = new145();
                push(goTo(84), list, false);
            }
            break;
            case 146: /* reduce AVazioPsimpleStmt */
            {
                ArrayList<Object> list = new146();
                push(goTo(85), list, false);
            }
            break;
            case 147: /* reduce AExpressaoPsimpleStmt */
            {
                ArrayList<Object> list = new147();
                push(goTo(85), list, false);
            }
            break;
            case 148: /* reduce AAssigmentPsimpleStmt */
            {
                ArrayList<Object> list = new148();
                push(goTo(85), list, false);
            }
            break;
            case 149: /* reduce AShortPsimpleStmt */
            {
                ArrayList<Object> list = new149();
                push(goTo(85), list, false);
            }
            break;
            case 150: /* reduce APemptyStmt */
            {
                ArrayList<Object> list = new150();
                push(goTo(86), list, false);
            }
            break;
            case 151: /* reduce APexpressionStmt */
            {
                ArrayList<Object> list = new151();
                push(goTo(87), list, false);
            }
            break;
            case 152: /* reduce AListaExpressaoPassignment */
            {
                ArrayList<Object> list = new152();
                push(goTo(88), list, false);
            }
            break;
            case 153: /* reduce APassignmentFator */
            {
                ArrayList<Object> list = new153();
                push(goTo(89), list, false);
            }
            break;
            case 154: /* reduce APshortpvarDecl */
            {
                ArrayList<Object> list = new154();
                push(goTo(90), list, false);
            }
            break;
            case 155: /* reduce AApreturnstmt1PreturnStmt */
            {
                ArrayList<Object> list = new155();
                push(goTo(91), list, false);
            }
            break;
            case 156: /* reduce AApreturnstmt2PreturnStmt */
            {
                ArrayList<Object> list = new156();
                push(goTo(91), list, false);
            }
            break;
            case 157: /* reduce AApifstmt1PifStmt */
            {
                ArrayList<Object> list = new157();
                push(goTo(92), list, false);
            }
            break;
            case 158: /* reduce AApifstmt2PifStmt */
            {
                ArrayList<Object> list = new158();
                push(goTo(92), list, false);
            }
            break;
            case 159: /* reduce AApifstmt3PifStmt */
            {
                ArrayList<Object> list = new159();
                push(goTo(92), list, false);
            }
            break;
            case 160: /* reduce AApifstmt4PifStmt */
            {
                ArrayList<Object> list = new160();
                push(goTo(92), list, false);
            }
            break;
            case 161: /* reduce APifStmtOpc */
            {
                ArrayList<Object> list = new161();
                push(goTo(93), list, false);
            }
            break;
            case 162: /* reduce APelse */
            {
                ArrayList<Object> list = new162();
                push(goTo(94), list, false);
            }
            break;
            case 163: /* reduce AIfPelseAgrup */
            {
                ArrayList<Object> list = new163();
                push(goTo(95), list, false);
            }
            break;
            case 164: /* reduce ABlocoPelseAgrup */
            {
                ArrayList<Object> list = new164();
                push(goTo(95), list, false);
            }
            break;
            case 165: /* reduce AApforstmt1PforStmt */
            {
                ArrayList<Object> list = new165();
                push(goTo(96), list, false);
            }
            break;
            case 166: /* reduce AApforstmt2PforStmt */
            {
                ArrayList<Object> list = new166();
                push(goTo(96), list, false);
            }
            break;
            case 167: /* reduce ACondicaoPforStmtOpc */
            {
                ArrayList<Object> list = new167();
                push(goTo(97), list, false);
            }
            break;
            case 168: /* reduce AClusuraForPforStmtOpc */
            {
                ArrayList<Object> list = new168();
                push(goTo(97), list, false);
            }
            break;
            case 169: /* reduce AItervaloPforStmtOpc */
            {
                ArrayList<Object> list = new169();
                push(goTo(97), list, false);
            }
            break;
            case 170: /* reduce APcondition */
            {
                ArrayList<Object> list = new170();
                push(goTo(98), list, false);
            }
            break;
            case 171: /* reduce AApforclause1PforClause */
            {
                ArrayList<Object> list = new171();
                push(goTo(99), list, false);
            }
            break;
            case 172: /* reduce AApforclause2PforClause */
            {
                ArrayList<Object> list = new172();
                push(goTo(99), list, false);
            }
            break;
            case 173: /* reduce AApforclause3PforClause */
            {
                ArrayList<Object> list = new173();
                push(goTo(99), list, false);
            }
            break;
            case 174: /* reduce AApforclause4PforClause */
            {
                ArrayList<Object> list = new174();
                push(goTo(99), list, false);
            }
            break;
            case 175: /* reduce AApforclausefator1PforClauseFator */
            {
                ArrayList<Object> list = new175();
                push(goTo(100), list, false);
            }
            break;
            case 176: /* reduce AApforclausefator2PforClauseFator */
            {
                ArrayList<Object> list = new176();
                push(goTo(100), list, false);
            }
            break;
            case 177: /* reduce AAprangeclause1PrangeClause */
            {
                ArrayList<Object> list = new177();
                push(goTo(101), list, false);
            }
            break;
            case 178: /* reduce AAprangeclause2PrangeClause */
            {
                ArrayList<Object> list = new178();
                push(goTo(101), list, false);
            }
            break;
            case 179: /* reduce AListaExpressaoPrangeClauseOpc */
            {
                ArrayList<Object> list = new179();
                push(goTo(102), list, false);
            }
            break;
            case 180: /* reduce AIdentificadorListaPrangeClauseOpc */
            {
                ArrayList<Object> list = new180();
                push(goTo(102), list, false);
            }
            break;
            case 181: /* reduce APinitStmt */
            {
                ArrayList<Object> list = new181();
                push(goTo(103), list, false);
            }
            break;
            case 182: /* reduce APpostStmt */
            {
                ArrayList<Object> list = new182();
                push(goTo(104), list, false);
            }
            break;
        }
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new0() /* reduce APprogramLoopPprogram */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PPprogram ppprogramNode1;
        {
            // Block

        ppprogramNode1 = new APprogramLoopPprogram();
        }
	nodeList.add(ppprogramNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new1() /* reduce APprogramLoop */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPprogramLoop ppprogramloopNode1;
        {
            // Block
        PPtopLevelDecl pptopleveldeclNode2;
        TTdelimitador ttdelimitadorNode3;
        pptopleveldeclNode2 = (PPtopLevelDecl)nodeArrayList1.get(0);
        ttdelimitadorNode3 = (TTdelimitador)nodeArrayList2.get(0);

        ppprogramloopNode1 = new APprogramLoop(pptopleveldeclNode2, ttdelimitadorNode3);
        }
	nodeList.add(ppprogramloopNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new2() /* reduce APdeclarationPtopLevelDecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPtopLevelDecl pptopleveldeclNode1;
        {
            // Block
        PPdeclaration ppdeclarationNode2;
        ppdeclarationNode2 = (PPdeclaration)nodeArrayList1.get(0);

        pptopleveldeclNode1 = new APdeclarationPtopLevelDecl(ppdeclarationNode2);
        }
	nodeList.add(pptopleveldeclNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new3() /* reduce APfunctionDeclPtopLevelDecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPtopLevelDecl pptopleveldeclNode1;
        {
            // Block
        PPfunctionDecl ppfunctiondeclNode2;
        ppfunctiondeclNode2 = (PPfunctionDecl)nodeArrayList1.get(0);

        pptopleveldeclNode1 = new APfunctionDeclPtopLevelDecl(ppfunctiondeclNode2);
        }
	nodeList.add(pptopleveldeclNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new4() /* reduce APmethodDeclPtopLevelDecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPtopLevelDecl pptopleveldeclNode1;
        {
            // Block
        PPmethodDecl ppmethoddeclNode2;
        ppmethoddeclNode2 = (PPmethodDecl)nodeArrayList1.get(0);

        pptopleveldeclNode1 = new APmethodDeclPtopLevelDecl(ppmethoddeclNode2);
        }
	nodeList.add(pptopleveldeclNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new5() /* reduce APconstDeclPdeclaration */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPdeclaration ppdeclarationNode1;
        {
            // Block
        PPconstDecl ppconstdeclNode2;
        ppconstdeclNode2 = (PPconstDecl)nodeArrayList1.get(0);

        ppdeclarationNode1 = new APconstDeclPdeclaration(ppconstdeclNode2);
        }
	nodeList.add(ppdeclarationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new6() /* reduce APvarDeclPdeclaration */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPdeclaration ppdeclarationNode1;
        {
            // Block
        PPvarDecl ppvardeclNode2;
        ppvardeclNode2 = (PPvarDecl)nodeArrayList1.get(0);

        ppdeclarationNode1 = new APvarDeclPdeclaration(ppvardeclNode2);
        }
	nodeList.add(ppdeclarationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new7() /* reduce APfunctionDecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPfunctionDecl ppfunctiondeclNode1;
        {
            // Block
        TTfunc ttfuncNode2;
        PPfunctionName ppfunctionnameNode3;
        PPfunctionDeclAgrup ppfunctiondeclagrupNode4;
        ttfuncNode2 = (TTfunc)nodeArrayList1.get(0);
        ppfunctionnameNode3 = (PPfunctionName)nodeArrayList2.get(0);
        ppfunctiondeclagrupNode4 = (PPfunctionDeclAgrup)nodeArrayList3.get(0);

        ppfunctiondeclNode1 = new APfunctionDecl(ttfuncNode2, ppfunctionnameNode3, ppfunctiondeclagrupNode4);
        }
	nodeList.add(ppfunctiondeclNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new8() /* reduce APfunctionPfunctionDeclAgrup */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPfunctionDeclAgrup ppfunctiondeclagrupNode1;
        {
            // Block
        PPfunction ppfunctionNode2;
        ppfunctionNode2 = (PPfunction)nodeArrayList1.get(0);

        ppfunctiondeclagrupNode1 = new APfunctionPfunctionDeclAgrup(ppfunctionNode2);
        }
	nodeList.add(ppfunctiondeclagrupNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new9() /* reduce APsignaturePfunctionDeclAgrup */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPfunctionDeclAgrup ppfunctiondeclagrupNode1;
        {
            // Block
        PPsignature ppsignatureNode2;
        ppsignatureNode2 = (PPsignature)nodeArrayList1.get(0);

        ppfunctiondeclagrupNode1 = new APsignaturePfunctionDeclAgrup(ppsignatureNode2);
        }
	nodeList.add(ppfunctiondeclagrupNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new10() /* reduce APfunctionName */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPfunctionName ppfunctionnameNode1;
        {
            // Block
        TTidentifier ttidentifierNode2;
        ttidentifierNode2 = (TTidentifier)nodeArrayList1.get(0);

        ppfunctionnameNode1 = new APfunctionName(ttidentifierNode2);
        }
	nodeList.add(ppfunctionnameNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new11() /* reduce APfunction */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPfunction ppfunctionNode1;
        {
            // Block
        PPsignature ppsignatureNode2;
        PPfunctionBody ppfunctionbodyNode3;
        ppsignatureNode2 = (PPsignature)nodeArrayList1.get(0);
        ppfunctionbodyNode3 = (PPfunctionBody)nodeArrayList2.get(0);

        ppfunctionNode1 = new APfunction(ppsignatureNode2, ppfunctionbodyNode3);
        }
	nodeList.add(ppfunctionNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new12() /* reduce APfunctionBody */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPfunctionBody ppfunctionbodyNode1;
        {
            // Block
        PPblock ppblockNode2;
        ppblockNode2 = (PPblock)nodeArrayList1.get(0);

        ppfunctionbodyNode1 = new APfunctionBody(ppblockNode2);
        }
	nodeList.add(ppfunctionbodyNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new13() /* reduce APmethodDecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPmethodDecl ppmethoddeclNode1;
        {
            // Block
        TTfunc ttfuncNode2;
        PPreceiver ppreceiverNode3;
        PPmethodName ppmethodnameNode4;
        PPmethodDeclAgrup ppmethoddeclagrupNode5;
        ttfuncNode2 = (TTfunc)nodeArrayList1.get(0);
        ppreceiverNode3 = (PPreceiver)nodeArrayList2.get(0);
        ppmethodnameNode4 = (PPmethodName)nodeArrayList3.get(0);
        ppmethoddeclagrupNode5 = (PPmethodDeclAgrup)nodeArrayList4.get(0);

        ppmethoddeclNode1 = new APmethodDecl(ttfuncNode2, ppreceiverNode3, ppmethodnameNode4, ppmethoddeclagrupNode5);
        }
	nodeList.add(ppmethoddeclNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new14() /* reduce APfunctionPmethodDeclAgrup */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPmethodDeclAgrup ppmethoddeclagrupNode1;
        {
            // Block
        PPfunction ppfunctionNode2;
        ppfunctionNode2 = (PPfunction)nodeArrayList1.get(0);

        ppmethoddeclagrupNode1 = new APfunctionPmethodDeclAgrup(ppfunctionNode2);
        }
	nodeList.add(ppmethoddeclagrupNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new15() /* reduce APsignaturePmethodDeclAgrup */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPmethodDeclAgrup ppmethoddeclagrupNode1;
        {
            // Block
        PPsignature ppsignatureNode2;
        ppsignatureNode2 = (PPsignature)nodeArrayList1.get(0);

        ppmethoddeclagrupNode1 = new APsignaturePmethodDeclAgrup(ppsignatureNode2);
        }
	nodeList.add(ppmethoddeclagrupNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new16() /* reduce APreceiver */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPreceiver ppreceiverNode1;
        {
            // Block
        PPparameters ppparametersNode2;
        ppparametersNode2 = (PPparameters)nodeArrayList1.get(0);

        ppreceiverNode1 = new APreceiver(ppparametersNode2);
        }
	nodeList.add(ppreceiverNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new17() /* reduce APmethodName */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPmethodName ppmethodnameNode1;
        {
            // Block
        TTidentifier ttidentifierNode2;
        ttidentifierNode2 = (TTidentifier)nodeArrayList1.get(0);

        ppmethodnameNode1 = new APmethodName(ttidentifierNode2);
        }
	nodeList.add(ppmethodnameNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new18() /* reduce AApparameters1Pparameters */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPparameters ppparametersNode1;
        {
            // Block
        TTabreParen ttabreparenNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        TTfechaParen ttfechaparenNode4;
        ttabreparenNode2 = (TTabreParen)nodeArrayList1.get(0);
        ttfechaparenNode4 = (TTfechaParen)nodeArrayList2.get(0);

        ppparametersNode1 = new APparameters(ttabreparenNode2, null, ttfechaparenNode4);
        }
	nodeList.add(ppparametersNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new19() /* reduce AApparameters2Pparameters */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPparameters ppparametersNode1;
        {
            // Block
        TTabreParen ttabreparenNode2;
        PPparametersOp ppparametersopNode3;
        TTfechaParen ttfechaparenNode4;
        ttabreparenNode2 = (TTabreParen)nodeArrayList1.get(0);
        ppparametersopNode3 = (PPparametersOp)nodeArrayList2.get(0);
        ttfechaparenNode4 = (TTfechaParen)nodeArrayList3.get(0);

        ppparametersNode1 = new APparameters(ttabreparenNode2, ppparametersopNode3, ttfechaparenNode4);
        }
	nodeList.add(ppparametersNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new20() /* reduce AApparametersop1PparametersOp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPparametersOp ppparametersopNode1;
        {
            // Block
        PPparameterList ppparameterlistNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        ppparameterlistNode2 = (PPparameterList)nodeArrayList1.get(0);

        ppparametersopNode1 = new APparametersOp(ppparameterlistNode2, null);
        }
	nodeList.add(ppparametersopNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new21() /* reduce AApparametersop2PparametersOp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPparametersOp ppparametersopNode1;
        {
            // Block
        PPparameterList ppparameterlistNode2;
        TTvirgula ttvirgulaNode3;
        ppparameterlistNode2 = (PPparameterList)nodeArrayList1.get(0);
        ttvirgulaNode3 = (TTvirgula)nodeArrayList2.get(0);

        ppparametersopNode1 = new APparametersOp(ppparameterlistNode2, ttvirgulaNode3);
        }
	nodeList.add(ppparametersopNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new22() /* reduce APparameterListLoopPparameterList */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPparameterList ppparameterlistNode1;
        {
            // Block
        PPparameterListLoop ppparameterlistloopNode2;
        ppparameterlistloopNode2 = (PPparameterListLoop)nodeArrayList1.get(0);

        ppparameterlistNode1 = new APparameterListLoopPparameterList(ppparameterlistloopNode2);
        }
	nodeList.add(ppparameterlistNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new23() /* reduce APparameterDeclPparameterList */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPparameterList ppparameterlistNode1;
        {
            // Block
        PPparameterDecl ppparameterdeclNode2;
        ppparameterdeclNode2 = (PPparameterDecl)nodeArrayList1.get(0);

        ppparameterlistNode1 = new APparameterDeclPparameterList(ppparameterdeclNode2);
        }
	nodeList.add(ppparameterlistNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new24() /* reduce APparameterListLoop */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPparameterListLoop ppparameterlistloopNode1;
        {
            // Block
        PPparameterList ppparameterlistNode2;
        TTvirgula ttvirgulaNode3;
        PPparameterDecl ppparameterdeclNode4;
        ppparameterlistNode2 = (PPparameterList)nodeArrayList1.get(0);
        ttvirgulaNode3 = (TTvirgula)nodeArrayList2.get(0);
        ppparameterdeclNode4 = (PPparameterDecl)nodeArrayList3.get(0);

        ppparameterlistloopNode1 = new APparameterListLoop(ppparameterlistNode2, ttvirgulaNode3, ppparameterdeclNode4);
        }
	nodeList.add(ppparameterlistloopNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new25() /* reduce AApparameterdecl1PparameterDecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPparameterDecl ppparameterdeclNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        PPtype pptypeNode3;
        pptypeNode3 = (PPtype)nodeArrayList1.get(0);

        ppparameterdeclNode1 = new APparameterDecl(null, pptypeNode3);
        }
	nodeList.add(ppparameterdeclNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new26() /* reduce AApparameterdecl2PparameterDecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPparameterDecl ppparameterdeclNode1;
        {
            // Block
        PPidentifierList ppidentifierlistNode2;
        PPtype pptypeNode3;
        ppidentifierlistNode2 = (PPidentifierList)nodeArrayList1.get(0);
        pptypeNode3 = (PPtype)nodeArrayList2.get(0);

        ppparameterdeclNode1 = new APparameterDecl(ppidentifierlistNode2, pptypeNode3);
        }
	nodeList.add(ppparameterdeclNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new27() /* reduce APidentifierListPidentifierList */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPidentifierList ppidentifierlistNode1;
        {
            // Block
        TTvirgula ttvirgulaNode2;
        ttvirgulaNode2 = (TTvirgula)nodeArrayList1.get(0);

        ppidentifierlistNode1 = new APidentifierListPidentifierList(ttvirgulaNode2);
        }
	nodeList.add(ppidentifierlistNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new28() /* reduce APidentifierList */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPidentifierList ppidentifierlistNode1;
        {
            // Block
        TTidentifier ttidentifierNode2;
        ttidentifierNode2 = (TTidentifier)nodeArrayList1.get(0);

        ppidentifierlistNode1 = new APidentifierList(ttidentifierNode2);
        }
	nodeList.add(ppidentifierlistNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new29() /* reduce APconstDecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPconstDecl ppconstdeclNode1;
        {
            // Block
        TTconst ttconstNode2;
        PPconstDecl2 ppconstdecl2Node3;
        ttconstNode2 = (TTconst)nodeArrayList1.get(0);
        ppconstdecl2Node3 = (PPconstDecl2)nodeArrayList2.get(0);

        ppconstdeclNode1 = new APconstDecl(ttconstNode2, ppconstdecl2Node3);
        }
	nodeList.add(ppconstdeclNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new30() /* reduce APconstSpecIdentPconstDecl2 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPconstDecl2 ppconstdecl2Node1;
        {
            // Block
        PPconstSpecIdent ppconstspecidentNode2;
        ppconstspecidentNode2 = (PPconstSpecIdent)nodeArrayList1.get(0);

        ppconstdecl2Node1 = new APconstSpecIdentPconstDecl2(ppconstspecidentNode2);
        }
	nodeList.add(ppconstdecl2Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new31() /* reduce APconstDecl2 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPconstDecl2 ppconstdecl2Node1;
        {
            // Block
        TTabreParen ttabreparenNode2;
        PPconstDecl3 ppconstdecl3Node3;
        ttabreparenNode2 = (TTabreParen)nodeArrayList1.get(0);
        ppconstdecl3Node3 = (PPconstDecl3)nodeArrayList2.get(0);

        ppconstdecl2Node1 = new APconstDecl2(ttabreparenNode2, ppconstdecl3Node3);
        }
	nodeList.add(ppconstdecl2Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new32() /* reduce APconstDeclConteudoPconstDecl3 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPconstDecl3 ppconstdecl3Node1;
        {
            // Block
        TTfechaParen ttfechaparenNode2;
        ttfechaparenNode2 = (TTfechaParen)nodeArrayList1.get(0);

        ppconstdecl3Node1 = new APconstDeclConteudoPconstDecl3(ttfechaparenNode2);
        }
	nodeList.add(ppconstdecl3Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new33() /* reduce APconstDeclConteudo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPconstDeclConteudo ppconstdeclconteudoNode1;
        {
            // Block
        PPconstSpecIdent ppconstspecidentNode2;
        TTdelimitador ttdelimitadorNode3;
        ppconstspecidentNode2 = (PPconstSpecIdent)nodeArrayList1.get(0);
        ttdelimitadorNode3 = (TTdelimitador)nodeArrayList2.get(0);

        ppconstdeclconteudoNode1 = new APconstDeclConteudo(ppconstspecidentNode2, ttdelimitadorNode3);
        }
	nodeList.add(ppconstdeclconteudoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new34() /* reduce APconstSpecIdent */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPconstSpecIdent ppconstspecidentNode1;
        {
            // Block
        PPidentifierList ppidentifierlistNode2;
        PPconstSpec ppconstspecNode3;
        ppidentifierlistNode2 = (PPidentifierList)nodeArrayList1.get(0);
        ppconstspecNode3 = (PPconstSpec)nodeArrayList2.get(0);

        ppconstspecidentNode1 = new APconstSpecIdent(ppidentifierlistNode2, ppconstspecNode3);
        }
	nodeList.add(ppconstspecidentNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new35() /* reduce APconstSpec2PconstSpec */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPconstSpec ppconstspecNode1;
        {
            // Block
        PPconstSpec2 ppconstspec2Node2;
        ppconstspec2Node2 = (PPconstSpec2)nodeArrayList1.get(0);

        ppconstspecNode1 = new APconstSpec2PconstSpec(ppconstspec2Node2);
        }
	nodeList.add(ppconstspecNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new36() /* reduce APtypePconstSpec2 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPconstSpec2 ppconstspec2Node1;
        {
            // Block
        PPtype pptypeNode2;
        TTigual ttigualNode3;
        PPexpressionList ppexpressionlistNode4;
        pptypeNode2 = (PPtype)nodeArrayList1.get(0);
        ttigualNode3 = (TTigual)nodeArrayList2.get(0);
        ppexpressionlistNode4 = (PPexpressionList)nodeArrayList3.get(0);

        ppconstspec2Node1 = new APtypePconstSpec2(pptypeNode2, ttigualNode3, ppexpressionlistNode4);
        }
	nodeList.add(ppconstspec2Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new37() /* reduce APexpressionListLoopPexpressionList */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PPexpressionList ppexpressionlistNode1;
        {
            // Block

        ppexpressionlistNode1 = new APexpressionListLoopPexpressionList();
        }
	nodeList.add(ppexpressionlistNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new38() /* reduce APexpressionList */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPexpressionList ppexpressionlistNode1;
        {
            // Block
        PPexpression ppexpressionNode2;
        ppexpressionNode2 = (PPexpression)nodeArrayList1.get(0);

        ppexpressionlistNode1 = new APexpressionList(ppexpressionNode2);
        }
	nodeList.add(ppexpressionlistNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new39() /* reduce APexpressionListLoop */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPexpressionListLoop ppexpressionlistloopNode1;
        {
            // Block
        TTvirgula ttvirgulaNode2;
        PPexpression ppexpressionNode3;
        ttvirgulaNode2 = (TTvirgula)nodeArrayList1.get(0);
        ppexpressionNode3 = (PPexpression)nodeArrayList2.get(0);

        ppexpressionlistloopNode1 = new APexpressionListLoop(ttvirgulaNode2, ppexpressionNode3);
        }
	nodeList.add(ppexpressionlistloopNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new40() /* reduce APunaryExprPexpression */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPexpression ppexpressionNode1;
        {
            // Block
        PPunaryExpr ppunaryexprNode2;
        ppunaryexprNode2 = (PPunaryExpr)nodeArrayList1.get(0);

        ppexpressionNode1 = new APunaryExprPexpression(ppunaryexprNode2);
        }
	nodeList.add(ppexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new41() /* reduce APexpression */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPexpression ppexpressionNode1;
        {
            // Block
        PPbinaryExpr ppbinaryexprNode2;
        ppbinaryexprNode2 = (PPbinaryExpr)nodeArrayList1.get(0);

        ppexpressionNode1 = new APexpression(ppbinaryexprNode2);
        }
	nodeList.add(ppexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new42() /* reduce APbinaryLogicoExpPbinaryExpr */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPbinaryExpr ppbinaryexprNode1;
        {
            // Block
        PPbinaryLogicoExp ppbinarylogicoexpNode2;
        ppbinarylogicoexpNode2 = (PPbinaryLogicoExp)nodeArrayList1.get(0);

        ppbinaryexprNode1 = new APbinaryLogicoExpPbinaryExpr(ppbinarylogicoexpNode2);
        }
	nodeList.add(ppbinaryexprNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new43() /* reduce APbinaryRelExpPbinaryExpr */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPbinaryExpr ppbinaryexprNode1;
        {
            // Block
        PPbinaryRelExp ppbinaryrelexpNode2;
        ppbinaryrelexpNode2 = (PPbinaryRelExp)nodeArrayList1.get(0);

        ppbinaryexprNode1 = new APbinaryRelExpPbinaryExpr(ppbinaryrelexpNode2);
        }
	nodeList.add(ppbinaryexprNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new44() /* reduce APbinaryAritExpPbinaryExpr */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPbinaryExpr ppbinaryexprNode1;
        {
            // Block
        PPbinaryAritExp ppbinaryaritexpNode2;
        ppbinaryaritexpNode2 = (PPbinaryAritExp)nodeArrayList1.get(0);

        ppbinaryexprNode1 = new APbinaryAritExpPbinaryExpr(ppbinaryaritexpNode2);
        }
	nodeList.add(ppbinaryexprNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new45() /* reduce APprimaryExprPunaryExpr */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPunaryExpr ppunaryexprNode1;
        {
            // Block
        PPprimaryExpr ppprimaryexprNode2;
        ppprimaryexprNode2 = (PPprimaryExpr)nodeArrayList1.get(0);

        ppunaryexprNode1 = new APprimaryExprPunaryExpr(ppprimaryexprNode2);
        }
	nodeList.add(ppunaryexprNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new46() /* reduce APunaryExpr */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPunaryExpr ppunaryexprNode1;
        {
            // Block
        PPunaryOp ppunaryopNode2;
        PPunaryExpr ppunaryexprNode3;
        ppunaryopNode2 = (PPunaryOp)nodeArrayList1.get(0);
        ppunaryexprNode3 = (PPunaryExpr)nodeArrayList2.get(0);

        ppunaryexprNode1 = new APunaryExpr(ppunaryopNode2, ppunaryexprNode3);
        }
	nodeList.add(ppunaryexprNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new47() /* reduce ATadicaoPunaryOp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPunaryOp ppunaryopNode1;
        {
            // Block
        TTadicao ttadicaoNode2;
        ttadicaoNode2 = (TTadicao)nodeArrayList1.get(0);

        ppunaryopNode1 = new ATadicaoPunaryOp(ttadicaoNode2);
        }
	nodeList.add(ppunaryopNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new48() /* reduce ATsubtracaoPunaryOp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPunaryOp ppunaryopNode1;
        {
            // Block
        TTsubtracao ttsubtracaoNode2;
        ttsubtracaoNode2 = (TTsubtracao)nodeArrayList1.get(0);

        ppunaryopNode1 = new ATsubtracaoPunaryOp(ttsubtracaoNode2);
        }
	nodeList.add(ppunaryopNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new49() /* reduce ATnotLogicoPunaryOp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPunaryOp ppunaryopNode1;
        {
            // Block
        TTnotLogico ttnotlogicoNode2;
        ttnotlogicoNode2 = (TTnotLogico)nodeArrayList1.get(0);

        ppunaryopNode1 = new ATnotLogicoPunaryOp(ttnotlogicoNode2);
        }
	nodeList.add(ppunaryopNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new50() /* reduce APbinaryLogicoExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPbinaryLogicoExp ppbinarylogicoexpNode1;
        {
            // Block
        PPbinaryLogicoExp ppbinarylogicoexpNode2;
        TTorLogico ttorlogicoNode3;
        PPbinaryLogicoFactor ppbinarylogicofactorNode4;
        ppbinarylogicoexpNode2 = (PPbinaryLogicoExp)nodeArrayList1.get(0);
        ttorlogicoNode3 = (TTorLogico)nodeArrayList2.get(0);
        ppbinarylogicofactorNode4 = (PPbinaryLogicoFactor)nodeArrayList3.get(0);

        ppbinarylogicoexpNode1 = new APbinaryLogicoExp(ppbinarylogicoexpNode2, ttorlogicoNode3, ppbinarylogicofactorNode4);
        }
	nodeList.add(ppbinarylogicoexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new51() /* reduce APbinaryLogicoFactor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPbinaryLogicoFactor ppbinarylogicofactorNode1;
        {
            // Block
        PPbinaryLogicoFactor ppbinarylogicofactorNode2;
        TTandLogico ttandlogicoNode3;
        PPbinaryLogicoTermo ppbinarylogicotermoNode4;
        ppbinarylogicofactorNode2 = (PPbinaryLogicoFactor)nodeArrayList1.get(0);
        ttandlogicoNode3 = (TTandLogico)nodeArrayList2.get(0);
        ppbinarylogicotermoNode4 = (PPbinaryLogicoTermo)nodeArrayList3.get(0);

        ppbinarylogicofactorNode1 = new APbinaryLogicoFactor(ppbinarylogicofactorNode2, ttandlogicoNode3, ppbinarylogicotermoNode4);
        }
	nodeList.add(ppbinarylogicofactorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new52() /* reduce APbinaryLogicoTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPbinaryLogicoTermo ppbinarylogicotermoNode1;
        {
            // Block
        TTabreParen ttabreparenNode2;
        PPbinaryLogicoExp ppbinarylogicoexpNode3;
        TTfechaParen ttfechaparenNode4;
        ttabreparenNode2 = (TTabreParen)nodeArrayList1.get(0);
        ppbinarylogicoexpNode3 = (PPbinaryLogicoExp)nodeArrayList2.get(0);
        ttfechaparenNode4 = (TTfechaParen)nodeArrayList3.get(0);

        ppbinarylogicotermoNode1 = new APbinaryLogicoTermo(ttabreparenNode2, ppbinarylogicoexpNode3, ttfechaparenNode4);
        }
	nodeList.add(ppbinarylogicotermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new53() /* reduce ATidentifierPbinaryLogicoTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPbinaryLogicoTermo ppbinarylogicotermoNode1;
        {
            // Block
        TTidentifier ttidentifierNode2;
        ttidentifierNode2 = (TTidentifier)nodeArrayList1.get(0);

        ppbinarylogicotermoNode1 = new ATidentifierPbinaryLogicoTermo(ttidentifierNode2);
        }
	nodeList.add(ppbinarylogicotermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new54() /* reduce APbinaryRelExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPbinaryRelExp ppbinaryrelexpNode1;
        {
            // Block
        PPbinaryRelExp ppbinaryrelexpNode2;
        PPrelOp pprelopNode3;
        PPbinaryRelTermo ppbinaryreltermoNode4;
        ppbinaryrelexpNode2 = (PPbinaryRelExp)nodeArrayList1.get(0);
        pprelopNode3 = (PPrelOp)nodeArrayList2.get(0);
        ppbinaryreltermoNode4 = (PPbinaryRelTermo)nodeArrayList3.get(0);

        ppbinaryrelexpNode1 = new APbinaryRelExp(ppbinaryrelexpNode2, pprelopNode3, ppbinaryreltermoNode4);
        }
	nodeList.add(ppbinaryrelexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new55() /* reduce APbinaryRelTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPbinaryRelTermo ppbinaryreltermoNode1;
        {
            // Block
        TTabreParen ttabreparenNode2;
        PPbinaryRelExp ppbinaryrelexpNode3;
        TTfechaParen ttfechaparenNode4;
        ttabreparenNode2 = (TTabreParen)nodeArrayList1.get(0);
        ppbinaryrelexpNode3 = (PPbinaryRelExp)nodeArrayList2.get(0);
        ttfechaparenNode4 = (TTfechaParen)nodeArrayList3.get(0);

        ppbinaryreltermoNode1 = new APbinaryRelTermo(ttabreparenNode2, ppbinaryrelexpNode3, ttfechaparenNode4);
        }
	nodeList.add(ppbinaryreltermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new56() /* reduce ATidentifierPbinaryRelTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPbinaryRelTermo ppbinaryreltermoNode1;
        {
            // Block
        TTidentifier ttidentifierNode2;
        ttidentifierNode2 = (TTidentifier)nodeArrayList1.get(0);

        ppbinaryreltermoNode1 = new ATidentifierPbinaryRelTermo(ttidentifierNode2);
        }
	nodeList.add(ppbinaryreltermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new57() /* reduce ATigualIgualPrelOp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrelOp pprelopNode1;
        {
            // Block
        TTigualIgual ttigualigualNode2;
        ttigualigualNode2 = (TTigualIgual)nodeArrayList1.get(0);

        pprelopNode1 = new ATigualIgualPrelOp(ttigualigualNode2);
        }
	nodeList.add(pprelopNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new58() /* reduce ATmenorPrelOp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrelOp pprelopNode1;
        {
            // Block
        TTmenor ttmenorNode2;
        ttmenorNode2 = (TTmenor)nodeArrayList1.get(0);

        pprelopNode1 = new ATmenorPrelOp(ttmenorNode2);
        }
	nodeList.add(pprelopNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new59() /* reduce ATmaiorPrelOp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrelOp pprelopNode1;
        {
            // Block
        TTmaior ttmaiorNode2;
        ttmaiorNode2 = (TTmaior)nodeArrayList1.get(0);

        pprelopNode1 = new ATmaiorPrelOp(ttmaiorNode2);
        }
	nodeList.add(pprelopNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new60() /* reduce APbinaryAritExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPbinaryAritExp ppbinaryaritexpNode1;
        {
            // Block
        PPbinaryAritExp ppbinaryaritexpNode2;
        PPaddOp ppaddopNode3;
        PPbinaryAritFactor ppbinaryaritfactorNode4;
        ppbinaryaritexpNode2 = (PPbinaryAritExp)nodeArrayList1.get(0);
        ppaddopNode3 = (PPaddOp)nodeArrayList2.get(0);
        ppbinaryaritfactorNode4 = (PPbinaryAritFactor)nodeArrayList3.get(0);

        ppbinaryaritexpNode1 = new APbinaryAritExp(ppbinaryaritexpNode2, ppaddopNode3, ppbinaryaritfactorNode4);
        }
	nodeList.add(ppbinaryaritexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new61() /* reduce APbinaryAritFactor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPbinaryAritFactor ppbinaryaritfactorNode1;
        {
            // Block
        PPbinaryAritFactor ppbinaryaritfactorNode2;
        PPmulOp ppmulopNode3;
        PPbinaryAritTermo ppbinaryarittermoNode4;
        ppbinaryaritfactorNode2 = (PPbinaryAritFactor)nodeArrayList1.get(0);
        ppmulopNode3 = (PPmulOp)nodeArrayList2.get(0);
        ppbinaryarittermoNode4 = (PPbinaryAritTermo)nodeArrayList3.get(0);

        ppbinaryaritfactorNode1 = new APbinaryAritFactor(ppbinaryaritfactorNode2, ppmulopNode3, ppbinaryarittermoNode4);
        }
	nodeList.add(ppbinaryaritfactorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new62() /* reduce APbinaryAritTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPbinaryAritTermo ppbinaryarittermoNode1;
        {
            // Block
        TTabreParen ttabreparenNode2;
        PPbinaryAritExp ppbinaryaritexpNode3;
        TTfechaParen ttfechaparenNode4;
        ttabreparenNode2 = (TTabreParen)nodeArrayList1.get(0);
        ppbinaryaritexpNode3 = (PPbinaryAritExp)nodeArrayList2.get(0);
        ttfechaparenNode4 = (TTfechaParen)nodeArrayList3.get(0);

        ppbinaryarittermoNode1 = new APbinaryAritTermo(ttabreparenNode2, ppbinaryaritexpNode3, ttfechaparenNode4);
        }
	nodeList.add(ppbinaryarittermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new63() /* reduce ATsubtracaoPbinaryAritTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPbinaryAritTermo ppbinaryarittermoNode1;
        {
            // Block
        TTidentifier ttidentifierNode2;
        ttidentifierNode2 = (TTidentifier)nodeArrayList1.get(0);

        ppbinaryarittermoNode1 = new ATsubtracaoPbinaryAritTermo(ttidentifierNode2);
        }
	nodeList.add(ppbinaryarittermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new64() /* reduce ATadicaoPaddOp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPaddOp ppaddopNode1;
        {
            // Block
        TTadicao ttadicaoNode2;
        ttadicaoNode2 = (TTadicao)nodeArrayList1.get(0);

        ppaddopNode1 = new ATadicaoPaddOp(ttadicaoNode2);
        }
	nodeList.add(ppaddopNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new65() /* reduce ATsubtracaoPaddOp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPaddOp ppaddopNode1;
        {
            // Block
        TTsubtracao ttsubtracaoNode2;
        ttsubtracaoNode2 = (TTsubtracao)nodeArrayList1.get(0);

        ppaddopNode1 = new ATsubtracaoPaddOp(ttsubtracaoNode2);
        }
	nodeList.add(ppaddopNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new66() /* reduce ATestrelaPmulOp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPmulOp ppmulopNode1;
        {
            // Block
        TTestrela ttestrelaNode2;
        ttestrelaNode2 = (TTestrela)nodeArrayList1.get(0);

        ppmulopNode1 = new ATestrelaPmulOp(ttestrelaNode2);
        }
	nodeList.add(ppmulopNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new67() /* reduce ATbarraPmulOp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPmulOp ppmulopNode1;
        {
            // Block
        TTbarra ttbarraNode2;
        ttbarraNode2 = (TTbarra)nodeArrayList1.get(0);

        ppmulopNode1 = new ATbarraPmulOp(ttbarraNode2);
        }
	nodeList.add(ppmulopNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new68() /* reduce APtypeNamePtype */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPtype pptypeNode1;
        {
            // Block
        PPtypeName pptypenameNode2;
        pptypenameNode2 = (PPtypeName)nodeArrayList1.get(0);

        pptypeNode1 = new APtypeNamePtype(pptypenameNode2);
        }
	nodeList.add(pptypeNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new69() /* reduce APtypeListPtype */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPtype pptypeNode1;
        {
            // Block
        PPtypeList pptypelistNode2;
        pptypelistNode2 = (PPtypeList)nodeArrayList1.get(0);

        pptypeNode1 = new APtypeListPtype(pptypelistNode2);
        }
	nodeList.add(pptypeNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new70() /* reduce APtype */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPtype pptypeNode1;
        {
            // Block
        TTabreParen ttabreparenNode2;
        PPtype pptypeNode3;
        TTfechaParen ttfechaparenNode4;
        ttabreparenNode2 = (TTabreParen)nodeArrayList1.get(0);
        pptypeNode3 = (PPtype)nodeArrayList2.get(0);
        ttfechaparenNode4 = (TTfechaParen)nodeArrayList3.get(0);

        pptypeNode1 = new APtype(ttabreparenNode2, pptypeNode3, ttfechaparenNode4);
        }
	nodeList.add(pptypeNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new71() /* reduce APtypeName */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPtypeName pptypenameNode1;
        {
            // Block
        TTidentifier ttidentifierNode2;
        ttidentifierNode2 = (TTidentifier)nodeArrayList1.get(0);

        pptypenameNode1 = new APtypeName(ttidentifierNode2);
        }
	nodeList.add(pptypenameNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new72() /* reduce ATipoArrayPtypeList */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPtypeList pptypelistNode1;
        {
            // Block
        PParrayType pparraytypeNode2;
        pparraytypeNode2 = (PParrayType)nodeArrayList1.get(0);

        pptypelistNode1 = new ATipoArrayPtypeList(pparraytypeNode2);
        }
	nodeList.add(pptypelistNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new73() /* reduce ATipoFuncaoPtypeList */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPtypeList pptypelistNode1;
        {
            // Block
        PPfunctionptype ppfunctionptypeNode2;
        ppfunctionptypeNode2 = (PPfunctionptype)nodeArrayList1.get(0);

        pptypelistNode1 = new ATipoFuncaoPtypeList(ppfunctionptypeNode2);
        }
	nodeList.add(pptypelistNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new74() /* reduce AParrayType */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParrayType pparraytypeNode1;
        {
            // Block
        TTabreColchete ttabrecolcheteNode2;
        PParrayLength pparraylengthNode3;
        TTfechaColchete ttfechacolcheteNode4;
        PPelementType ppelementtypeNode5;
        ttabrecolcheteNode2 = (TTabreColchete)nodeArrayList1.get(0);
        pparraylengthNode3 = (PParrayLength)nodeArrayList2.get(0);
        ttfechacolcheteNode4 = (TTfechaColchete)nodeArrayList3.get(0);
        ppelementtypeNode5 = (PPelementType)nodeArrayList4.get(0);

        pparraytypeNode1 = new AParrayType(ttabrecolcheteNode2, pparraylengthNode3, ttfechacolcheteNode4, ppelementtypeNode5);
        }
	nodeList.add(pparraytypeNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new75() /* reduce AParrayLength */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParrayLength pparraylengthNode1;
        {
            // Block
        PPexpression ppexpressionNode2;
        ppexpressionNode2 = (PPexpression)nodeArrayList1.get(0);

        pparraylengthNode1 = new AParrayLength(ppexpressionNode2);
        }
	nodeList.add(pparraylengthNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new76() /* reduce APelementType */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPelementType ppelementtypeNode1;
        {
            // Block
        PPtype pptypeNode2;
        pptypeNode2 = (PPtype)nodeArrayList1.get(0);

        ppelementtypeNode1 = new APelementType(pptypeNode2);
        }
	nodeList.add(ppelementtypeNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new77() /* reduce APfunctionptype */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPfunctionptype ppfunctionptypeNode1;
        {
            // Block
        TTfunc ttfuncNode2;
        PPsignature ppsignatureNode3;
        ttfuncNode2 = (TTfunc)nodeArrayList1.get(0);
        ppsignatureNode3 = (PPsignature)nodeArrayList2.get(0);

        ppfunctionptypeNode1 = new APfunctionptype(ttfuncNode2, ppsignatureNode3);
        }
	nodeList.add(ppfunctionptypeNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new78() /* reduce AApsignature1Psignature */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPsignature ppsignatureNode1;
        {
            // Block
        PPparameters ppparametersNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        ppparametersNode2 = (PPparameters)nodeArrayList1.get(0);

        ppsignatureNode1 = new APsignature(ppparametersNode2, null);
        }
	nodeList.add(ppsignatureNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new79() /* reduce AApsignature2Psignature */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPsignature ppsignatureNode1;
        {
            // Block
        PPparameters ppparametersNode2;
        PPresult ppresultNode3;
        ppparametersNode2 = (PPparameters)nodeArrayList1.get(0);
        ppresultNode3 = (PPresult)nodeArrayList2.get(0);

        ppsignatureNode1 = new APsignature(ppparametersNode2, ppresultNode3);
        }
	nodeList.add(ppsignatureNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new80() /* reduce AParametrosPresult */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPresult ppresultNode1;
        {
            // Block
        PPparameters ppparametersNode2;
        ppparametersNode2 = (PPparameters)nodeArrayList1.get(0);

        ppresultNode1 = new AParametrosPresult(ppparametersNode2);
        }
	nodeList.add(ppresultNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new81() /* reduce ATipoPresult */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPresult ppresultNode1;
        {
            // Block
        PPtype pptypeNode2;
        pptypeNode2 = (PPtype)nodeArrayList1.get(0);

        ppresultNode1 = new ATipoPresult(pptypeNode2);
        }
	nodeList.add(ppresultNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new82() /* reduce AApparametersopcional1PparametersOpcional */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPparametersOpcional ppparametersopcionalNode1;
        {
            // Block
        PPparameterList ppparameterlistNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        ppparameterlistNode2 = (PPparameterList)nodeArrayList1.get(0);

        ppparametersopcionalNode1 = new APparametersOpcional(ppparameterlistNode2, null);
        }
	nodeList.add(ppparametersopcionalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new83() /* reduce AApparametersopcional2PparametersOpcional */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPparametersOpcional ppparametersopcionalNode1;
        {
            // Block
        PPparameterList ppparameterlistNode2;
        TTvirgula ttvirgulaNode3;
        ppparameterlistNode2 = (PPparameterList)nodeArrayList1.get(0);
        ttvirgulaNode3 = (TTvirgula)nodeArrayList2.get(0);

        ppparametersopcionalNode1 = new APparametersOpcional(ppparameterlistNode2, ttvirgulaNode3);
        }
	nodeList.add(ppparametersopcionalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new84() /* reduce ADeclaVariavelPvarDecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPvarDecl ppvardeclNode1;
        {
            // Block
        TTvar ttvarNode2;
        PPvarDeclAgrup ppvardeclagrupNode3;
        ttvarNode2 = (TTvar)nodeArrayList1.get(0);
        ppvardeclagrupNode3 = (PPvarDeclAgrup)nodeArrayList2.get(0);

        ppvardeclNode1 = new ADeclaVariavelPvarDecl(ttvarNode2, ppvardeclagrupNode3);
        }
	nodeList.add(ppvardeclNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new85() /* reduce ADeclaGrupoPvarDeclAgrup */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPvarDeclAgrup ppvardeclagrupNode1;
        {
            // Block
        PPvarSpec ppvarspecNode2;
        ppvarspecNode2 = (PPvarSpec)nodeArrayList1.get(0);

        ppvardeclagrupNode1 = new ADeclaGrupoPvarDeclAgrup(ppvarspecNode2);
        }
	nodeList.add(ppvardeclagrupNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new86() /* reduce APvarDeclAgrup */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPvarDeclAgrup ppvardeclagrupNode1;
        {
            // Block
        TTabreParen ttabreparenNode2;
        PPvarDeclAgrupParen ppvardeclagrupparenNode3;
        ttabreparenNode2 = (TTabreParen)nodeArrayList1.get(0);
        ppvardeclagrupparenNode3 = (PPvarDeclAgrupParen)nodeArrayList2.get(0);

        ppvardeclagrupNode1 = new APvarDeclAgrup(ttabreparenNode2, ppvardeclagrupparenNode3);
        }
	nodeList.add(ppvardeclagrupNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new87() /* reduce APvarDeclAgrupLoopPvarDeclAgrupParen */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPvarDeclAgrupParen ppvardeclagrupparenNode1;
        {
            // Block
        TTfechaParen ttfechaparenNode2;
        ttfechaparenNode2 = (TTfechaParen)nodeArrayList1.get(0);

        ppvardeclagrupparenNode1 = new APvarDeclAgrupLoopPvarDeclAgrupParen(ttfechaparenNode2);
        }
	nodeList.add(ppvardeclagrupparenNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new88() /* reduce APvarDeclAgrupLoop */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPvarDeclAgrupLoop ppvardeclagruploopNode1;
        {
            // Block
        PPvarSpec ppvarspecNode2;
        TTpontoEVirgula ttpontoevirgulaNode3;
        ppvarspecNode2 = (PPvarSpec)nodeArrayList1.get(0);
        ttpontoevirgulaNode3 = (TTpontoEVirgula)nodeArrayList2.get(0);

        ppvardeclagruploopNode1 = new APvarDeclAgrupLoop(ppvarspecNode2, ttpontoevirgulaNode3);
        }
	nodeList.add(ppvardeclagruploopNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new89() /* reduce APvarSpec */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPvarSpec ppvarspecNode1;
        {
            // Block
        PPidentifierList ppidentifierlistNode2;
        PPvarSpecAgrup ppvarspecagrupNode3;
        ppidentifierlistNode2 = (PPidentifierList)nodeArrayList1.get(0);
        ppvarspecagrupNode3 = (PPvarSpecAgrup)nodeArrayList2.get(0);

        ppvarspecNode1 = new APvarSpec(ppidentifierlistNode2, ppvarspecagrupNode3);
        }
	nodeList.add(ppvarspecNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new90() /* reduce AAvariavelespcpvarspecagrup1PvarSpecAgrup */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPvarSpecAgrup ppvarspecagrupNode1;
        {
            // Block
        PPtype pptypeNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        pptypeNode2 = (PPtype)nodeArrayList1.get(0);

        ppvarspecagrupNode1 = new AVariavelEspcPvarSpecAgrup(pptypeNode2, null);
        }
	nodeList.add(ppvarspecagrupNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new91() /* reduce AAvariavelespcpvarspecagrup2PvarSpecAgrup */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPvarSpecAgrup ppvarspecagrupNode1;
        {
            // Block
        PPtype pptypeNode2;
        PPvarSpecAgrupOpc ppvarspecagrupopcNode3;
        pptypeNode2 = (PPtype)nodeArrayList1.get(0);
        ppvarspecagrupopcNode3 = (PPvarSpecAgrupOpc)nodeArrayList2.get(0);

        ppvarspecagrupNode1 = new AVariavelEspcPvarSpecAgrup(pptypeNode2, ppvarspecagrupopcNode3);
        }
	nodeList.add(ppvarspecagrupNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new92() /* reduce APvarSpecAgrup */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPvarSpecAgrup ppvarspecagrupNode1;
        {
            // Block
        TTigual ttigualNode2;
        PPexpressionList ppexpressionlistNode3;
        ttigualNode2 = (TTigual)nodeArrayList1.get(0);
        ppexpressionlistNode3 = (PPexpressionList)nodeArrayList2.get(0);

        ppvarspecagrupNode1 = new APvarSpecAgrup(ttigualNode2, ppexpressionlistNode3);
        }
	nodeList.add(ppvarspecagrupNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new93() /* reduce APvarSpecAgrupOpc */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPvarSpecAgrupOpc ppvarspecagrupopcNode1;
        {
            // Block
        TTigual ttigualNode2;
        PPexpressionList ppexpressionlistNode3;
        ttigualNode2 = (TTigual)nodeArrayList1.get(0);
        ppexpressionlistNode3 = (PPexpressionList)nodeArrayList2.get(0);

        ppvarspecagrupopcNode1 = new APvarSpecAgrupOpc(ttigualNode2, ppexpressionlistNode3);
        }
	nodeList.add(ppvarspecagrupopcNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new94() /* reduce AExpressaoPrimaPprimaryExpr */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPprimaryExpr ppprimaryexprNode1;
        {
            // Block
        PPoperand ppoperandNode2;
        ppoperandNode2 = (PPoperand)nodeArrayList1.get(0);

        ppprimaryexprNode1 = new AExpressaoPrimaPprimaryExpr(ppoperandNode2);
        }
	nodeList.add(ppprimaryexprNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new95() /* reduce AConversaoPprimaryExpr */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPprimaryExpr ppprimaryexprNode1;
        {
            // Block
        PPconversion ppconversionNode2;
        ppconversionNode2 = (PPconversion)nodeArrayList1.get(0);

        ppprimaryexprNode1 = new AConversaoPprimaryExpr(ppconversionNode2);
        }
	nodeList.add(ppprimaryexprNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new96() /* reduce AIndicePprimaryExpr */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPprimaryExpr ppprimaryexprNode1;
        {
            // Block
        PPprimaryExpr ppprimaryexprNode2;
        PPindex ppindexNode3;
        ppprimaryexprNode2 = (PPprimaryExpr)nodeArrayList1.get(0);
        ppindexNode3 = (PPindex)nodeArrayList2.get(0);

        ppprimaryexprNode1 = new AIndicePprimaryExpr(ppprimaryexprNode2, ppindexNode3);
        }
	nodeList.add(ppprimaryexprNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new97() /* reduce AArgumentosPprimaryExpr */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPprimaryExpr ppprimaryexprNode1;
        {
            // Block
        PPprimaryExpr ppprimaryexprNode2;
        PParguments ppargumentsNode3;
        ppprimaryexprNode2 = (PPprimaryExpr)nodeArrayList1.get(0);
        ppargumentsNode3 = (PParguments)nodeArrayList2.get(0);

        ppprimaryexprNode1 = new AArgumentosPprimaryExpr(ppprimaryexprNode2, ppargumentsNode3);
        }
	nodeList.add(ppprimaryexprNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new98() /* reduce ALiteralPoperand */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPoperand ppoperandNode1;
        {
            // Block
        PPliteral ppliteralNode2;
        ppliteralNode2 = (PPliteral)nodeArrayList1.get(0);

        ppoperandNode1 = new ALiteralPoperand(ppliteralNode2);
        }
	nodeList.add(ppoperandNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new99() /* reduce ATidentifierPoperand */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPoperand ppoperandNode1;
        {
            // Block
        TTidentifier ttidentifierNode2;
        ttidentifierNode2 = (TTidentifier)nodeArrayList1.get(0);

        ppoperandNode1 = new ATidentifierPoperand(ttidentifierNode2);
        }
	nodeList.add(ppoperandNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new100() /* reduce ATabreParenPoperand */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPoperand ppoperandNode1;
        {
            // Block
        TTabreParen ttabreparenNode2;
        PPexpression ppexpressionNode3;
        TTfechaParen ttfechaparenNode4;
        ttabreparenNode2 = (TTabreParen)nodeArrayList1.get(0);
        ppexpressionNode3 = (PPexpression)nodeArrayList2.get(0);
        ttfechaparenNode4 = (TTfechaParen)nodeArrayList3.get(0);

        ppoperandNode1 = new ATabreParenPoperand(ttabreparenNode2, ppexpressionNode3, ttfechaparenNode4);
        }
	nodeList.add(ppoperandNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new101() /* reduce ABaseLiteralPliteral */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPliteral ppliteralNode1;
        {
            // Block
        PPbasicLit ppbasiclitNode2;
        ppbasiclitNode2 = (PPbasicLit)nodeArrayList1.get(0);

        ppliteralNode1 = new ABaseLiteralPliteral(ppbasiclitNode2);
        }
	nodeList.add(ppliteralNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new102() /* reduce ACompositeLiteralPliteral */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPliteral ppliteralNode1;
        {
            // Block
        PPcompositeLit ppcompositelitNode2;
        ppcompositelitNode2 = (PPcompositeLit)nodeArrayList1.get(0);

        ppliteralNode1 = new ACompositeLiteralPliteral(ppcompositelitNode2);
        }
	nodeList.add(ppliteralNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new103() /* reduce AFuncaoListPliteral */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPliteral ppliteralNode1;
        {
            // Block
        PPfunctionList ppfunctionlistNode2;
        ppfunctionlistNode2 = (PPfunctionList)nodeArrayList1.get(0);

        ppliteralNode1 = new AFuncaoListPliteral(ppfunctionlistNode2);
        }
	nodeList.add(ppliteralNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new104() /* reduce APbasicLit */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPbasicLit ppbasiclitNode1;
        {
            // Block
        TTnumero ttnumeroNode2;
        ttnumeroNode2 = (TTnumero)nodeArrayList1.get(0);

        ppbasiclitNode1 = new APbasicLit(ttnumeroNode2);
        }
	nodeList.add(ppbasiclitNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new105() /* reduce APcompositeLit */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPcompositeLit ppcompositelitNode1;
        {
            // Block
        PPliteralType ppliteraltypeNode2;
        PPliteralValue ppliteralvalueNode3;
        ppliteraltypeNode2 = (PPliteralType)nodeArrayList1.get(0);
        ppliteralvalueNode3 = (PPliteralValue)nodeArrayList2.get(0);

        ppcompositelitNode1 = new APcompositeLit(ppliteraltypeNode2, ppliteralvalueNode3);
        }
	nodeList.add(ppcompositelitNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new106() /* reduce APliteralType */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPliteralType ppliteraltypeNode1;
        {
            // Block
        PParrayType pparraytypeNode2;
        pparraytypeNode2 = (PParrayType)nodeArrayList1.get(0);

        ppliteraltypeNode1 = new APliteralType(pparraytypeNode2);
        }
	nodeList.add(ppliteraltypeNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new107() /* reduce ATabreColchetePliteralType */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPliteralType ppliteraltypeNode1;
        {
            // Block
        TTabreColchete ttabrecolcheteNode2;
        TTellipsis ttellipsisNode3;
        TTfechaColchete ttfechacolcheteNode4;
        PPelementType ppelementtypeNode5;
        ttabrecolcheteNode2 = (TTabreColchete)nodeArrayList1.get(0);
        ttellipsisNode3 = (TTellipsis)nodeArrayList2.get(0);
        ttfechacolcheteNode4 = (TTfechaColchete)nodeArrayList3.get(0);
        ppelementtypeNode5 = (PPelementType)nodeArrayList4.get(0);

        ppliteraltypeNode1 = new ATabreColchetePliteralType(ttabrecolcheteNode2, ttellipsisNode3, ttfechacolcheteNode4, ppelementtypeNode5);
        }
	nodeList.add(ppliteraltypeNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new108() /* reduce AApliteralvalue1PliteralValue */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPliteralValue ppliteralvalueNode1;
        {
            // Block
        TTabreChave ttabrechaveNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        TTfechaChave ttfechachaveNode4;
        ttabrechaveNode2 = (TTabreChave)nodeArrayList1.get(0);
        ttfechachaveNode4 = (TTfechaChave)nodeArrayList2.get(0);

        ppliteralvalueNode1 = new APliteralValue(ttabrechaveNode2, null, ttfechachaveNode4);
        }
	nodeList.add(ppliteralvalueNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new109() /* reduce AApliteralvalue2PliteralValue */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPliteralValue ppliteralvalueNode1;
        {
            // Block
        TTabreChave ttabrechaveNode2;
        PPliteralValueOpc ppliteralvalueopcNode3;
        TTfechaChave ttfechachaveNode4;
        ttabrechaveNode2 = (TTabreChave)nodeArrayList1.get(0);
        ppliteralvalueopcNode3 = (PPliteralValueOpc)nodeArrayList2.get(0);
        ttfechachaveNode4 = (TTfechaChave)nodeArrayList3.get(0);

        ppliteralvalueNode1 = new APliteralValue(ttabrechaveNode2, ppliteralvalueopcNode3, ttfechachaveNode4);
        }
	nodeList.add(ppliteralvalueNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new110() /* reduce AApliteralvalueopc1PliteralValueOpc */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPliteralValueOpc ppliteralvalueopcNode1;
        {
            // Block
        PPelementLit ppelementlitNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        ppelementlitNode2 = (PPelementLit)nodeArrayList1.get(0);

        ppliteralvalueopcNode1 = new APliteralValueOpc(ppelementlitNode2, null);
        }
	nodeList.add(ppliteralvalueopcNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new111() /* reduce AApliteralvalueopc2PliteralValueOpc */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPliteralValueOpc ppliteralvalueopcNode1;
        {
            // Block
        PPelementLit ppelementlitNode2;
        TTvirgula ttvirgulaNode3;
        ppelementlitNode2 = (PPelementLit)nodeArrayList1.get(0);
        ttvirgulaNode3 = (TTvirgula)nodeArrayList2.get(0);

        ppliteralvalueopcNode1 = new APliteralValueOpc(ppelementlitNode2, ttvirgulaNode3);
        }
	nodeList.add(ppliteralvalueopcNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new112() /* reduce AElementoLoopPelementLit */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPelementLit ppelementlitNode1;
        {
            // Block
        PPelementLitLoop ppelementlitloopNode2;
        ppelementlitloopNode2 = (PPelementLitLoop)nodeArrayList1.get(0);

        ppelementlitNode1 = new AElementoLoopPelementLit(ppelementlitloopNode2);
        }
	nodeList.add(ppelementlitNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new113() /* reduce APelementLit */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPelementLit ppelementlitNode1;
        {
            // Block
        PPkeyedElement ppkeyedelementNode2;
        ppkeyedelementNode2 = (PPkeyedElement)nodeArrayList1.get(0);

        ppelementlitNode1 = new APelementLit(ppkeyedelementNode2);
        }
	nodeList.add(ppelementlitNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new114() /* reduce APelementLitLoop */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPelementLitLoop ppelementlitloopNode1;
        {
            // Block
        PPelementLit ppelementlitNode2;
        TTvirgula ttvirgulaNode3;
        PPkeyedElement ppkeyedelementNode4;
        ppelementlitNode2 = (PPelementLit)nodeArrayList1.get(0);
        ttvirgulaNode3 = (TTvirgula)nodeArrayList2.get(0);
        ppkeyedelementNode4 = (PPkeyedElement)nodeArrayList3.get(0);

        ppelementlitloopNode1 = new APelementLitLoop(ppelementlitNode2, ttvirgulaNode3, ppkeyedelementNode4);
        }
	nodeList.add(ppelementlitloopNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new115() /* reduce AApkeyedelement1PkeyedElement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPkeyedElement ppkeyedelementNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        PPelement ppelementNode3;
        ppelementNode3 = (PPelement)nodeArrayList1.get(0);

        ppkeyedelementNode1 = new APkeyedElement(null, ppelementNode3);
        }
	nodeList.add(ppkeyedelementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new116() /* reduce AApkeyedelement2PkeyedElement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPkeyedElement ppkeyedelementNode1;
        {
            // Block
        PPkeyedElementOpc ppkeyedelementopcNode2;
        PPelement ppelementNode3;
        ppkeyedelementopcNode2 = (PPkeyedElementOpc)nodeArrayList1.get(0);
        ppelementNode3 = (PPelement)nodeArrayList2.get(0);

        ppkeyedelementNode1 = new APkeyedElement(ppkeyedelementopcNode2, ppelementNode3);
        }
	nodeList.add(ppkeyedelementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new117() /* reduce APkeyedElementOpc */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPkeyedElementOpc ppkeyedelementopcNode1;
        {
            // Block
        PPkey ppkeyNode2;
        TTdoispontos ttdoispontosNode3;
        ppkeyNode2 = (PPkey)nodeArrayList1.get(0);
        ttdoispontosNode3 = (TTdoispontos)nodeArrayList2.get(0);

        ppkeyedelementopcNode1 = new APkeyedElementOpc(ppkeyNode2, ttdoispontosNode3);
        }
	nodeList.add(ppkeyedelementopcNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new118() /* reduce ANmeCampoPkey */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPkey ppkeyNode1;
        {
            // Block
        PPfieldName ppfieldnameNode2;
        ppfieldnameNode2 = (PPfieldName)nodeArrayList1.get(0);

        ppkeyNode1 = new ANmeCampoPkey(ppfieldnameNode2);
        }
	nodeList.add(ppkeyNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new119() /* reduce AExpressaoPkey */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPkey ppkeyNode1;
        {
            // Block
        PPexpression ppexpressionNode2;
        ppexpressionNode2 = (PPexpression)nodeArrayList1.get(0);

        ppkeyNode1 = new AExpressaoPkey(ppexpressionNode2);
        }
	nodeList.add(ppkeyNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new120() /* reduce AValorLiteralPkey */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPkey ppkeyNode1;
        {
            // Block
        PPliteralValue ppliteralvalueNode2;
        ppliteralvalueNode2 = (PPliteralValue)nodeArrayList1.get(0);

        ppkeyNode1 = new AValorLiteralPkey(ppliteralvalueNode2);
        }
	nodeList.add(ppkeyNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new121() /* reduce APfieldName */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPfieldName ppfieldnameNode1;
        {
            // Block
        TTidentifier ttidentifierNode2;
        ttidentifierNode2 = (TTidentifier)nodeArrayList1.get(0);

        ppfieldnameNode1 = new APfieldName(ttidentifierNode2);
        }
	nodeList.add(ppfieldnameNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new122() /* reduce AExpressaoPelement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPelement ppelementNode1;
        {
            // Block
        PPexpression ppexpressionNode2;
        ppexpressionNode2 = (PPexpression)nodeArrayList1.get(0);

        ppelementNode1 = new AExpressaoPelement(ppexpressionNode2);
        }
	nodeList.add(ppelementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new123() /* reduce APelement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPelement ppelementNode1;
        {
            // Block
        PPliteralValue ppliteralvalueNode2;
        ppliteralvalueNode2 = (PPliteralValue)nodeArrayList1.get(0);

        ppelementNode1 = new APelement(ppliteralvalueNode2);
        }
	nodeList.add(ppelementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new124() /* reduce APfunctionList */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPfunctionList ppfunctionlistNode1;
        {
            // Block
        TTfunc ttfuncNode2;
        PPfunction ppfunctionNode3;
        ttfuncNode2 = (TTfunc)nodeArrayList1.get(0);
        ppfunctionNode3 = (PPfunction)nodeArrayList2.get(0);

        ppfunctionlistNode1 = new APfunctionList(ttfuncNode2, ppfunctionNode3);
        }
	nodeList.add(ppfunctionlistNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new125() /* reduce AApconversion1Pconversion */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPconversion ppconversionNode1;
        {
            // Block
        PPtype pptypeNode2;
        TTabreParen ttabreparenNode3;
        PPexpression ppexpressionNode4;
        @SuppressWarnings("unused") Object nullNode5 = null;
        TTfechaParen ttfechaparenNode6;
        pptypeNode2 = (PPtype)nodeArrayList1.get(0);
        ttabreparenNode3 = (TTabreParen)nodeArrayList2.get(0);
        ppexpressionNode4 = (PPexpression)nodeArrayList3.get(0);
        ttfechaparenNode6 = (TTfechaParen)nodeArrayList4.get(0);

        ppconversionNode1 = new APconversion(pptypeNode2, ttabreparenNode3, ppexpressionNode4, null, ttfechaparenNode6);
        }
	nodeList.add(ppconversionNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new126() /* reduce AApconversion2Pconversion */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPconversion ppconversionNode1;
        {
            // Block
        PPtype pptypeNode2;
        TTabreParen ttabreparenNode3;
        PPexpression ppexpressionNode4;
        TTvirgula ttvirgulaNode5;
        TTfechaParen ttfechaparenNode6;
        pptypeNode2 = (PPtype)nodeArrayList1.get(0);
        ttabreparenNode3 = (TTabreParen)nodeArrayList2.get(0);
        ppexpressionNode4 = (PPexpression)nodeArrayList3.get(0);
        ttvirgulaNode5 = (TTvirgula)nodeArrayList4.get(0);
        ttfechaparenNode6 = (TTfechaParen)nodeArrayList5.get(0);

        ppconversionNode1 = new APconversion(pptypeNode2, ttabreparenNode3, ppexpressionNode4, ttvirgulaNode5, ttfechaparenNode6);
        }
	nodeList.add(ppconversionNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new127() /* reduce APindex */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPindex ppindexNode1;
        {
            // Block
        TTabreColchete ttabrecolcheteNode2;
        PPexpression ppexpressionNode3;
        TTfechaColchete ttfechacolcheteNode4;
        ttabrecolcheteNode2 = (TTabreColchete)nodeArrayList1.get(0);
        ppexpressionNode3 = (PPexpression)nodeArrayList2.get(0);
        ttfechacolcheteNode4 = (TTfechaColchete)nodeArrayList3.get(0);

        ppindexNode1 = new APindex(ttabrecolcheteNode2, ppexpressionNode3, ttfechacolcheteNode4);
        }
	nodeList.add(ppindexNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new128() /* reduce AAparguments1Parguments */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParguments ppargumentsNode1;
        {
            // Block
        TTabreParen ttabreparenNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        TTfechaParen ttfechaparenNode4;
        ttabreparenNode2 = (TTabreParen)nodeArrayList1.get(0);
        ttfechaparenNode4 = (TTfechaParen)nodeArrayList2.get(0);

        ppargumentsNode1 = new AParguments(ttabreparenNode2, null, ttfechaparenNode4);
        }
	nodeList.add(ppargumentsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new129() /* reduce AAparguments2Parguments */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParguments ppargumentsNode1;
        {
            // Block
        TTabreParen ttabreparenNode2;
        PPargumentsCorpo ppargumentscorpoNode3;
        TTfechaParen ttfechaparenNode4;
        ttabreparenNode2 = (TTabreParen)nodeArrayList1.get(0);
        ppargumentscorpoNode3 = (PPargumentsCorpo)nodeArrayList2.get(0);
        ttfechaparenNode4 = (TTfechaParen)nodeArrayList3.get(0);

        ppargumentsNode1 = new AParguments(ttabreparenNode2, ppargumentscorpoNode3, ttfechaparenNode4);
        }
	nodeList.add(ppargumentsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new130() /* reduce AApargumentscorpo1PargumentsCorpo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPargumentsCorpo ppargumentscorpoNode1;
        {
            // Block
        PPargumentsCorpoAgrup ppargumentscorpoagrupNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        @SuppressWarnings("unused") Object nullNode4 = null;
        ppargumentscorpoagrupNode2 = (PPargumentsCorpoAgrup)nodeArrayList1.get(0);

        ppargumentscorpoNode1 = new APargumentsCorpo(ppargumentscorpoagrupNode2, null, null);
        }
	nodeList.add(ppargumentscorpoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new131() /* reduce AApargumentscorpo2PargumentsCorpo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPargumentsCorpo ppargumentscorpoNode1;
        {
            // Block
        PPargumentsCorpoAgrup ppargumentscorpoagrupNode2;
        TTellipsis ttellipsisNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        ppargumentscorpoagrupNode2 = (PPargumentsCorpoAgrup)nodeArrayList1.get(0);
        ttellipsisNode3 = (TTellipsis)nodeArrayList2.get(0);

        ppargumentscorpoNode1 = new APargumentsCorpo(ppargumentscorpoagrupNode2, ttellipsisNode3, null);
        }
	nodeList.add(ppargumentscorpoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new132() /* reduce AApargumentscorpo3PargumentsCorpo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPargumentsCorpo ppargumentscorpoNode1;
        {
            // Block
        PPargumentsCorpoAgrup ppargumentscorpoagrupNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        TTvirgula ttvirgulaNode4;
        ppargumentscorpoagrupNode2 = (PPargumentsCorpoAgrup)nodeArrayList1.get(0);
        ttvirgulaNode4 = (TTvirgula)nodeArrayList2.get(0);

        ppargumentscorpoNode1 = new APargumentsCorpo(ppargumentscorpoagrupNode2, null, ttvirgulaNode4);
        }
	nodeList.add(ppargumentscorpoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new133() /* reduce AApargumentscorpo4PargumentsCorpo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPargumentsCorpo ppargumentscorpoNode1;
        {
            // Block
        PPargumentsCorpoAgrup ppargumentscorpoagrupNode2;
        TTellipsis ttellipsisNode3;
        TTvirgula ttvirgulaNode4;
        ppargumentscorpoagrupNode2 = (PPargumentsCorpoAgrup)nodeArrayList1.get(0);
        ttellipsisNode3 = (TTellipsis)nodeArrayList2.get(0);
        ttvirgulaNode4 = (TTvirgula)nodeArrayList3.get(0);

        ppargumentscorpoNode1 = new APargumentsCorpo(ppargumentscorpoagrupNode2, ttellipsisNode3, ttvirgulaNode4);
        }
	nodeList.add(ppargumentscorpoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new134() /* reduce AListaExpressaoPargumentsCorpoAgrup */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPargumentsCorpoAgrup ppargumentscorpoagrupNode1;
        {
            // Block
        PPexpressionList ppexpressionlistNode2;
        ppexpressionlistNode2 = (PPexpressionList)nodeArrayList1.get(0);

        ppargumentscorpoagrupNode1 = new AListaExpressaoPargumentsCorpoAgrup(ppexpressionlistNode2);
        }
	nodeList.add(ppargumentscorpoagrupNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new135() /* reduce AAtipopargumentscorpoagrup1PargumentsCorpoAgrup */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPargumentsCorpoAgrup ppargumentscorpoagrupNode1;
        {
            // Block
        PPtype pptypeNode2;
        TTvirgula ttvirgulaNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        pptypeNode2 = (PPtype)nodeArrayList1.get(0);
        ttvirgulaNode3 = (TTvirgula)nodeArrayList2.get(0);

        ppargumentscorpoagrupNode1 = new ATipoPargumentsCorpoAgrup(pptypeNode2, ttvirgulaNode3, null);
        }
	nodeList.add(ppargumentscorpoagrupNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new136() /* reduce AAtipopargumentscorpoagrup2PargumentsCorpoAgrup */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPargumentsCorpoAgrup ppargumentscorpoagrupNode1;
        {
            // Block
        PPtype pptypeNode2;
        TTvirgula ttvirgulaNode3;
        PPexpressionList ppexpressionlistNode4;
        pptypeNode2 = (PPtype)nodeArrayList1.get(0);
        ttvirgulaNode3 = (TTvirgula)nodeArrayList2.get(0);
        ppexpressionlistNode4 = (PPexpressionList)nodeArrayList3.get(0);

        ppargumentscorpoagrupNode1 = new ATipoPargumentsCorpoAgrup(pptypeNode2, ttvirgulaNode3, ppexpressionlistNode4);
        }
	nodeList.add(ppargumentscorpoagrupNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new137() /* reduce APblock */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPblock ppblockNode1;
        {
            // Block
        TTabreChave ttabrechaveNode2;
        PPstatementList ppstatementlistNode3;
        TTfechaChave ttfechachaveNode4;
        ttabrechaveNode2 = (TTabreChave)nodeArrayList1.get(0);
        ppstatementlistNode3 = (PPstatementList)nodeArrayList2.get(0);
        ttfechachaveNode4 = (TTfechaChave)nodeArrayList3.get(0);

        ppblockNode1 = new APblock(ttabrechaveNode2, ppstatementlistNode3, ttfechachaveNode4);
        }
	nodeList.add(ppblockNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new138() /* reduce APstatementListLoopPstatementList */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PPstatementList ppstatementlistNode1;
        {
            // Block

        ppstatementlistNode1 = new APstatementListLoopPstatementList();
        }
	nodeList.add(ppstatementlistNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new139() /* reduce APstatementListLoop */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPstatementListLoop ppstatementlistloopNode1;
        {
            // Block
        PPstatement ppstatementNode2;
        TTpontoEVirgula ttpontoevirgulaNode3;
        ppstatementNode2 = (PPstatement)nodeArrayList1.get(0);
        ttpontoevirgulaNode3 = (TTpontoEVirgula)nodeArrayList2.get(0);

        ppstatementlistloopNode1 = new APstatementListLoop(ppstatementNode2, ttpontoevirgulaNode3);
        }
	nodeList.add(ppstatementlistloopNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new140() /* reduce ADeclaracaoPstatement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPstatement ppstatementNode1;
        {
            // Block
        PPdeclaration ppdeclarationNode2;
        ppdeclarationNode2 = (PPdeclaration)nodeArrayList1.get(0);

        ppstatementNode1 = new ADeclaracaoPstatement(ppdeclarationNode2);
        }
	nodeList.add(ppstatementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new141() /* reduce AStmlSimplesPstatement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPstatement ppstatementNode1;
        {
            // Block
        PPsimpleStmt ppsimplestmtNode2;
        ppsimplestmtNode2 = (PPsimpleStmt)nodeArrayList1.get(0);

        ppstatementNode1 = new AStmlSimplesPstatement(ppsimplestmtNode2);
        }
	nodeList.add(ppstatementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new142() /* reduce ARetornoPstatement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPstatement ppstatementNode1;
        {
            // Block
        PPreturnStmt ppreturnstmtNode2;
        ppreturnstmtNode2 = (PPreturnStmt)nodeArrayList1.get(0);

        ppstatementNode1 = new ARetornoPstatement(ppreturnstmtNode2);
        }
	nodeList.add(ppstatementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new143() /* reduce ABlocoPstatement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPstatement ppstatementNode1;
        {
            // Block
        PPblock ppblockNode2;
        ppblockNode2 = (PPblock)nodeArrayList1.get(0);

        ppstatementNode1 = new ABlocoPstatement(ppblockNode2);
        }
	nodeList.add(ppstatementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new144() /* reduce AIfPstatement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPstatement ppstatementNode1;
        {
            // Block
        PPifStmt ppifstmtNode2;
        ppifstmtNode2 = (PPifStmt)nodeArrayList1.get(0);

        ppstatementNode1 = new AIfPstatement(ppifstmtNode2);
        }
	nodeList.add(ppstatementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new145() /* reduce AForPstatement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPstatement ppstatementNode1;
        {
            // Block
        PPforStmt ppforstmtNode2;
        ppforstmtNode2 = (PPforStmt)nodeArrayList1.get(0);

        ppstatementNode1 = new AForPstatement(ppforstmtNode2);
        }
	nodeList.add(ppstatementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new146() /* reduce AVazioPsimpleStmt */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPsimpleStmt ppsimplestmtNode1;
        {
            // Block
        PPemptyStmt ppemptystmtNode2;
        ppemptystmtNode2 = (PPemptyStmt)nodeArrayList1.get(0);

        ppsimplestmtNode1 = new AVazioPsimpleStmt(ppemptystmtNode2);
        }
	nodeList.add(ppsimplestmtNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new147() /* reduce AExpressaoPsimpleStmt */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPsimpleStmt ppsimplestmtNode1;
        {
            // Block
        PPexpressionStmt ppexpressionstmtNode2;
        ppexpressionstmtNode2 = (PPexpressionStmt)nodeArrayList1.get(0);

        ppsimplestmtNode1 = new AExpressaoPsimpleStmt(ppexpressionstmtNode2);
        }
	nodeList.add(ppsimplestmtNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new148() /* reduce AAssigmentPsimpleStmt */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPsimpleStmt ppsimplestmtNode1;
        {
            // Block
        PPassignment ppassignmentNode2;
        ppassignmentNode2 = (PPassignment)nodeArrayList1.get(0);

        ppsimplestmtNode1 = new AAssigmentPsimpleStmt(ppassignmentNode2);
        }
	nodeList.add(ppsimplestmtNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new149() /* reduce AShortPsimpleStmt */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPsimpleStmt ppsimplestmtNode1;
        {
            // Block
        PPshortpvarDecl ppshortpvardeclNode2;
        ppshortpvardeclNode2 = (PPshortpvarDecl)nodeArrayList1.get(0);

        ppsimplestmtNode1 = new AShortPsimpleStmt(ppshortpvardeclNode2);
        }
	nodeList.add(ppsimplestmtNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new150() /* reduce APemptyStmt */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PPemptyStmt ppemptystmtNode1;
        {
            // Block

        ppemptystmtNode1 = new APemptyStmt();
        }
	nodeList.add(ppemptystmtNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new151() /* reduce APexpressionStmt */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPexpressionStmt ppexpressionstmtNode1;
        {
            // Block
        PPexpression ppexpressionNode2;
        ppexpressionNode2 = (PPexpression)nodeArrayList1.get(0);

        ppexpressionstmtNode1 = new APexpressionStmt(ppexpressionNode2);
        }
	nodeList.add(ppexpressionstmtNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new152() /* reduce AListaExpressaoPassignment */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPassignment ppassignmentNode1;
        {
            // Block
        PPexpressionList ppexpressionlistNode2;
        TTigual ttigualNode3;
        PPassignmentFator ppassignmentfatorNode4;
        ppexpressionlistNode2 = (PPexpressionList)nodeArrayList1.get(0);
        ttigualNode3 = (TTigual)nodeArrayList2.get(0);
        ppassignmentfatorNode4 = (PPassignmentFator)nodeArrayList3.get(0);

        ppassignmentNode1 = new AListaExpressaoPassignment(ppexpressionlistNode2, ttigualNode3, ppassignmentfatorNode4);
        }
	nodeList.add(ppassignmentNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new153() /* reduce APassignmentFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPassignmentFator ppassignmentfatorNode1;
        {
            // Block
        PPexpressionList ppexpressionlistNode2;
        ppexpressionlistNode2 = (PPexpressionList)nodeArrayList1.get(0);

        ppassignmentfatorNode1 = new APassignmentFator(ppexpressionlistNode2);
        }
	nodeList.add(ppassignmentfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new154() /* reduce APshortpvarDecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPshortpvarDecl ppshortpvardeclNode1;
        {
            // Block
        PPidentifierList ppidentifierlistNode2;
        TTdeclaracaoAtribuicao ttdeclaracaoatribuicaoNode3;
        PPexpressionList ppexpressionlistNode4;
        ppidentifierlistNode2 = (PPidentifierList)nodeArrayList1.get(0);
        ttdeclaracaoatribuicaoNode3 = (TTdeclaracaoAtribuicao)nodeArrayList2.get(0);
        ppexpressionlistNode4 = (PPexpressionList)nodeArrayList3.get(0);

        ppshortpvardeclNode1 = new APshortpvarDecl(ppidentifierlistNode2, ttdeclaracaoatribuicaoNode3, ppexpressionlistNode4);
        }
	nodeList.add(ppshortpvardeclNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new155() /* reduce AApreturnstmt1PreturnStmt */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPreturnStmt ppreturnstmtNode1;
        {
            // Block
        TTreturn ttreturnNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        ttreturnNode2 = (TTreturn)nodeArrayList1.get(0);

        ppreturnstmtNode1 = new APreturnStmt(ttreturnNode2, null);
        }
	nodeList.add(ppreturnstmtNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new156() /* reduce AApreturnstmt2PreturnStmt */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPreturnStmt ppreturnstmtNode1;
        {
            // Block
        TTreturn ttreturnNode2;
        PPexpressionList ppexpressionlistNode3;
        ttreturnNode2 = (TTreturn)nodeArrayList1.get(0);
        ppexpressionlistNode3 = (PPexpressionList)nodeArrayList2.get(0);

        ppreturnstmtNode1 = new APreturnStmt(ttreturnNode2, ppexpressionlistNode3);
        }
	nodeList.add(ppreturnstmtNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new157() /* reduce AApifstmt1PifStmt */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPifStmt ppifstmtNode1;
        {
            // Block
        TTif ttifNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        PPexpression ppexpressionNode4;
        PPblock ppblockNode5;
        @SuppressWarnings("unused") Object nullNode6 = null;
        ttifNode2 = (TTif)nodeArrayList1.get(0);
        ppexpressionNode4 = (PPexpression)nodeArrayList2.get(0);
        ppblockNode5 = (PPblock)nodeArrayList3.get(0);

        ppifstmtNode1 = new APifStmt(ttifNode2, null, ppexpressionNode4, ppblockNode5, null);
        }
	nodeList.add(ppifstmtNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new158() /* reduce AApifstmt2PifStmt */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPifStmt ppifstmtNode1;
        {
            // Block
        TTif ttifNode2;
        PPifStmtOpc ppifstmtopcNode3;
        PPexpression ppexpressionNode4;
        PPblock ppblockNode5;
        @SuppressWarnings("unused") Object nullNode6 = null;
        ttifNode2 = (TTif)nodeArrayList1.get(0);
        ppifstmtopcNode3 = (PPifStmtOpc)nodeArrayList2.get(0);
        ppexpressionNode4 = (PPexpression)nodeArrayList3.get(0);
        ppblockNode5 = (PPblock)nodeArrayList4.get(0);

        ppifstmtNode1 = new APifStmt(ttifNode2, ppifstmtopcNode3, ppexpressionNode4, ppblockNode5, null);
        }
	nodeList.add(ppifstmtNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new159() /* reduce AApifstmt3PifStmt */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPifStmt ppifstmtNode1;
        {
            // Block
        TTif ttifNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        PPexpression ppexpressionNode4;
        PPblock ppblockNode5;
        PPelse ppelseNode6;
        ttifNode2 = (TTif)nodeArrayList1.get(0);
        ppexpressionNode4 = (PPexpression)nodeArrayList2.get(0);
        ppblockNode5 = (PPblock)nodeArrayList3.get(0);
        ppelseNode6 = (PPelse)nodeArrayList4.get(0);

        ppifstmtNode1 = new APifStmt(ttifNode2, null, ppexpressionNode4, ppblockNode5, ppelseNode6);
        }
	nodeList.add(ppifstmtNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new160() /* reduce AApifstmt4PifStmt */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPifStmt ppifstmtNode1;
        {
            // Block
        TTif ttifNode2;
        PPifStmtOpc ppifstmtopcNode3;
        PPexpression ppexpressionNode4;
        PPblock ppblockNode5;
        PPelse ppelseNode6;
        ttifNode2 = (TTif)nodeArrayList1.get(0);
        ppifstmtopcNode3 = (PPifStmtOpc)nodeArrayList2.get(0);
        ppexpressionNode4 = (PPexpression)nodeArrayList3.get(0);
        ppblockNode5 = (PPblock)nodeArrayList4.get(0);
        ppelseNode6 = (PPelse)nodeArrayList5.get(0);

        ppifstmtNode1 = new APifStmt(ttifNode2, ppifstmtopcNode3, ppexpressionNode4, ppblockNode5, ppelseNode6);
        }
	nodeList.add(ppifstmtNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new161() /* reduce APifStmtOpc */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPifStmtOpc ppifstmtopcNode1;
        {
            // Block
        PPsimpleStmt ppsimplestmtNode2;
        TTpontoEVirgula ttpontoevirgulaNode3;
        ppsimplestmtNode2 = (PPsimpleStmt)nodeArrayList1.get(0);
        ttpontoevirgulaNode3 = (TTpontoEVirgula)nodeArrayList2.get(0);

        ppifstmtopcNode1 = new APifStmtOpc(ppsimplestmtNode2, ttpontoevirgulaNode3);
        }
	nodeList.add(ppifstmtopcNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new162() /* reduce APelse */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPelse ppelseNode1;
        {
            // Block
        TTelse ttelseNode2;
        PPelseAgrup ppelseagrupNode3;
        ttelseNode2 = (TTelse)nodeArrayList1.get(0);
        ppelseagrupNode3 = (PPelseAgrup)nodeArrayList2.get(0);

        ppelseNode1 = new APelse(ttelseNode2, ppelseagrupNode3);
        }
	nodeList.add(ppelseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new163() /* reduce AIfPelseAgrup */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPelseAgrup ppelseagrupNode1;
        {
            // Block
        PPifStmt ppifstmtNode2;
        ppifstmtNode2 = (PPifStmt)nodeArrayList1.get(0);

        ppelseagrupNode1 = new AIfPelseAgrup(ppifstmtNode2);
        }
	nodeList.add(ppelseagrupNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new164() /* reduce ABlocoPelseAgrup */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPelseAgrup ppelseagrupNode1;
        {
            // Block
        PPblock ppblockNode2;
        ppblockNode2 = (PPblock)nodeArrayList1.get(0);

        ppelseagrupNode1 = new ABlocoPelseAgrup(ppblockNode2);
        }
	nodeList.add(ppelseagrupNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new165() /* reduce AApforstmt1PforStmt */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPforStmt ppforstmtNode1;
        {
            // Block
        TTfor ttforNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        PPblock ppblockNode4;
        ttforNode2 = (TTfor)nodeArrayList1.get(0);
        ppblockNode4 = (PPblock)nodeArrayList2.get(0);

        ppforstmtNode1 = new APforStmt(ttforNode2, null, ppblockNode4);
        }
	nodeList.add(ppforstmtNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new166() /* reduce AApforstmt2PforStmt */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPforStmt ppforstmtNode1;
        {
            // Block
        TTfor ttforNode2;
        PPforStmtOpc ppforstmtopcNode3;
        PPblock ppblockNode4;
        ttforNode2 = (TTfor)nodeArrayList1.get(0);
        ppforstmtopcNode3 = (PPforStmtOpc)nodeArrayList2.get(0);
        ppblockNode4 = (PPblock)nodeArrayList3.get(0);

        ppforstmtNode1 = new APforStmt(ttforNode2, ppforstmtopcNode3, ppblockNode4);
        }
	nodeList.add(ppforstmtNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new167() /* reduce ACondicaoPforStmtOpc */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPforStmtOpc ppforstmtopcNode1;
        {
            // Block
        PPcondition ppconditionNode2;
        ppconditionNode2 = (PPcondition)nodeArrayList1.get(0);

        ppforstmtopcNode1 = new ACondicaoPforStmtOpc(ppconditionNode2);
        }
	nodeList.add(ppforstmtopcNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new168() /* reduce AClusuraForPforStmtOpc */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPforStmtOpc ppforstmtopcNode1;
        {
            // Block
        PPforClause ppforclauseNode2;
        ppforclauseNode2 = (PPforClause)nodeArrayList1.get(0);

        ppforstmtopcNode1 = new AClusuraForPforStmtOpc(ppforclauseNode2);
        }
	nodeList.add(ppforstmtopcNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new169() /* reduce AItervaloPforStmtOpc */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPforStmtOpc ppforstmtopcNode1;
        {
            // Block
        PPrangeClause pprangeclauseNode2;
        pprangeclauseNode2 = (PPrangeClause)nodeArrayList1.get(0);

        ppforstmtopcNode1 = new AItervaloPforStmtOpc(pprangeclauseNode2);
        }
	nodeList.add(ppforstmtopcNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new170() /* reduce APcondition */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPcondition ppconditionNode1;
        {
            // Block
        PPexpression ppexpressionNode2;
        ppexpressionNode2 = (PPexpression)nodeArrayList1.get(0);

        ppconditionNode1 = new APcondition(ppexpressionNode2);
        }
	nodeList.add(ppconditionNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new171() /* reduce AApforclause1PforClause */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPforClause ppforclauseNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        TTpontoEVirgula ttpontoevirgulaNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        PPforClauseFator ppforclausefatorNode5;
        ttpontoevirgulaNode3 = (TTpontoEVirgula)nodeArrayList1.get(0);
        ppforclausefatorNode5 = (PPforClauseFator)nodeArrayList2.get(0);

        ppforclauseNode1 = new APforClause(null, ttpontoevirgulaNode3, null, ppforclausefatorNode5);
        }
	nodeList.add(ppforclauseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new172() /* reduce AApforclause2PforClause */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPforClause ppforclauseNode1;
        {
            // Block
        PPinitStmt ppinitstmtNode2;
        TTpontoEVirgula ttpontoevirgulaNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        PPforClauseFator ppforclausefatorNode5;
        ppinitstmtNode2 = (PPinitStmt)nodeArrayList1.get(0);
        ttpontoevirgulaNode3 = (TTpontoEVirgula)nodeArrayList2.get(0);
        ppforclausefatorNode5 = (PPforClauseFator)nodeArrayList3.get(0);

        ppforclauseNode1 = new APforClause(ppinitstmtNode2, ttpontoevirgulaNode3, null, ppforclausefatorNode5);
        }
	nodeList.add(ppforclauseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new173() /* reduce AApforclause3PforClause */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPforClause ppforclauseNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        TTpontoEVirgula ttpontoevirgulaNode3;
        PPcondition ppconditionNode4;
        PPforClauseFator ppforclausefatorNode5;
        ttpontoevirgulaNode3 = (TTpontoEVirgula)nodeArrayList1.get(0);
        ppconditionNode4 = (PPcondition)nodeArrayList2.get(0);
        ppforclausefatorNode5 = (PPforClauseFator)nodeArrayList3.get(0);

        ppforclauseNode1 = new APforClause(null, ttpontoevirgulaNode3, ppconditionNode4, ppforclausefatorNode5);
        }
	nodeList.add(ppforclauseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new174() /* reduce AApforclause4PforClause */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPforClause ppforclauseNode1;
        {
            // Block
        PPinitStmt ppinitstmtNode2;
        TTpontoEVirgula ttpontoevirgulaNode3;
        PPcondition ppconditionNode4;
        PPforClauseFator ppforclausefatorNode5;
        ppinitstmtNode2 = (PPinitStmt)nodeArrayList1.get(0);
        ttpontoevirgulaNode3 = (TTpontoEVirgula)nodeArrayList2.get(0);
        ppconditionNode4 = (PPcondition)nodeArrayList3.get(0);
        ppforclausefatorNode5 = (PPforClauseFator)nodeArrayList4.get(0);

        ppforclauseNode1 = new APforClause(ppinitstmtNode2, ttpontoevirgulaNode3, ppconditionNode4, ppforclausefatorNode5);
        }
	nodeList.add(ppforclauseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new175() /* reduce AApforclausefator1PforClauseFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPforClauseFator ppforclausefatorNode1;
        {
            // Block
        TTpontoEVirgula ttpontoevirgulaNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        ttpontoevirgulaNode2 = (TTpontoEVirgula)nodeArrayList1.get(0);

        ppforclausefatorNode1 = new APforClauseFator(ttpontoevirgulaNode2, null);
        }
	nodeList.add(ppforclausefatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new176() /* reduce AApforclausefator2PforClauseFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPforClauseFator ppforclausefatorNode1;
        {
            // Block
        TTpontoEVirgula ttpontoevirgulaNode2;
        PPpostStmt pppoststmtNode3;
        ttpontoevirgulaNode2 = (TTpontoEVirgula)nodeArrayList1.get(0);
        pppoststmtNode3 = (PPpostStmt)nodeArrayList2.get(0);

        ppforclausefatorNode1 = new APforClauseFator(ttpontoevirgulaNode2, pppoststmtNode3);
        }
	nodeList.add(ppforclausefatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new177() /* reduce AAprangeclause1PrangeClause */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrangeClause pprangeclauseNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        TTrange ttrangeNode3;
        PPexpression ppexpressionNode4;
        ttrangeNode3 = (TTrange)nodeArrayList1.get(0);
        ppexpressionNode4 = (PPexpression)nodeArrayList2.get(0);

        pprangeclauseNode1 = new APrangeClause(null, ttrangeNode3, ppexpressionNode4);
        }
	nodeList.add(pprangeclauseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new178() /* reduce AAprangeclause2PrangeClause */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrangeClause pprangeclauseNode1;
        {
            // Block
        PPrangeClauseOpc pprangeclauseopcNode2;
        TTrange ttrangeNode3;
        PPexpression ppexpressionNode4;
        pprangeclauseopcNode2 = (PPrangeClauseOpc)nodeArrayList1.get(0);
        ttrangeNode3 = (TTrange)nodeArrayList2.get(0);
        ppexpressionNode4 = (PPexpression)nodeArrayList3.get(0);

        pprangeclauseNode1 = new APrangeClause(pprangeclauseopcNode2, ttrangeNode3, ppexpressionNode4);
        }
	nodeList.add(pprangeclauseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new179() /* reduce AListaExpressaoPrangeClauseOpc */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrangeClauseOpc pprangeclauseopcNode1;
        {
            // Block
        PPexpressionList ppexpressionlistNode2;
        TTigual ttigualNode3;
        ppexpressionlistNode2 = (PPexpressionList)nodeArrayList1.get(0);
        ttigualNode3 = (TTigual)nodeArrayList2.get(0);

        pprangeclauseopcNode1 = new AListaExpressaoPrangeClauseOpc(ppexpressionlistNode2, ttigualNode3);
        }
	nodeList.add(pprangeclauseopcNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new180() /* reduce AIdentificadorListaPrangeClauseOpc */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrangeClauseOpc pprangeclauseopcNode1;
        {
            // Block
        PPidentifierList ppidentifierlistNode2;
        TTdeclaracaoAtribuicao ttdeclaracaoatribuicaoNode3;
        ppidentifierlistNode2 = (PPidentifierList)nodeArrayList1.get(0);
        ttdeclaracaoatribuicaoNode3 = (TTdeclaracaoAtribuicao)nodeArrayList2.get(0);

        pprangeclauseopcNode1 = new AIdentificadorListaPrangeClauseOpc(ppidentifierlistNode2, ttdeclaracaoatribuicaoNode3);
        }
	nodeList.add(pprangeclauseopcNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new181() /* reduce APinitStmt */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPinitStmt ppinitstmtNode1;
        {
            // Block
        PPsimpleStmt ppsimplestmtNode2;
        ppsimplestmtNode2 = (PPsimpleStmt)nodeArrayList1.get(0);

        ppinitstmtNode1 = new APinitStmt(ppsimplestmtNode2);
        }
	nodeList.add(ppinitstmtNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new182() /* reduce APpostStmt */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPpostStmt pppoststmtNode1;
        {
            // Block
        PPsimpleStmt ppsimplestmtNode2;
        ppsimplestmtNode2 = (PPsimpleStmt)nodeArrayList1.get(0);

        pppoststmtNode1 = new APpostStmt(ppsimplestmtNode2);
        }
	nodeList.add(pppoststmtNode1);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, REDUCE, 0}, },
			{{-1, ERROR, 1}, {55, ACCEPT, -1}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: EOF",
        };*/
    private static int[] errors;
/*      {
			0, 0, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
